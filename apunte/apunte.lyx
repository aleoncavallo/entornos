#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass lyx
\use_default_options true
\begin_modules
theorems-ams
theorems-chap
multicol
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Cover

\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset VSpace vfill*
\end_inset


\end_layout

\begin_layout Title
Entorno de Programación
\end_layout

\begin_layout Author
Tecnicatura Universitaria en Inteligencia Artificial
\begin_inset VSpace vfill*
\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Date
9 de mayo de 2023.
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill*
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Introduccion
\begin_inset Quotes fld
\end_inset


\emph on
Una computadora es para mí la herramienta más sorprendente que hayamos ideado.
 Es el equivalente a una bicicleta para nuestras mentes
\emph default

\begin_inset Quotes frd
\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space \hfill{}
\end_inset

Steve Jobs
\end_layout

\begin_layout Part
Fundamentos
\end_layout

\begin_layout Chapter
Historia
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Se podría hacer mas hincapié en los dispositivos de almacenamiento y en
 las formas de operar las computadoras.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Orígenes de la computadora
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename pascal.jpg
	display false
	scale 8

\end_inset


\end_layout

\end_inset

 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Blaise_Pascal"
literal "true"

\end_inset

 
\emph on
Blaise Pascal
\emph default
 había desarrollado en 1642 una de las primeras calculadoras mecánicas de
 la historia, conocida como la 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=3h71HAJWnVU"
literal "true"

\end_inset

 Pascalina
\begin_inset Quotes frd
\end_inset

.
 Esta máquina, capaz de realizar operaciones aritméticas básicas mediante
 el uso de engranajes y ruedas dentadas, fue un importante avance en el
 campo de la mecánica y la automatización, y sentó las bases para el desarrollo
 de las máquinas calculadoras modernas.
 La Pascalina fue utilizada por matemáticos y científicos de la época, y
 su diseño influyó en el desarrollo de posteriores calculadoras mecánicas.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pascalina.png
	lyxscale 17
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Pascalina
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=BlbQsKpq3Ak"
literal "true"

\end_inset

 máquina analítica
\begin_inset Quotes frd
\end_inset

 fue un proyecto desarrollado por 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename babbage.jpg
	display false
	scale 14

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Charles_Babbage"
literal "true"

\end_inset

 
\emph on
Charles Babbage
\emph default
 en 1837, considerado como el primer prototipo de una computadora moderna.
 Babbage, matemático, filósofo e inventor inglés, diseñó una máquina capaz
 de realizar cálculos automáticamente mediante el uso de engranajes y ruedas
 dentadas, similar a la Pascalina de Blaise Pascal pero con un alcance mucho
 mayor.
 La máquina analítica tenía la capacidad de almacenar programas y realizar
 operaciones matemáticas complejas, y se considera el primer ejemplo de
 un sistema de procesamiento de datos automático.
 Aunque Babbage nunca logró construir la máquina completa debido a problemas
 financieros y técnicos, su proyecto sentó las bases para el desarrollo
 de las computadoras modernas y tuvo un gran impacto en el campo de la informáti
ca y la automatización.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diferencial.jpg
	lyxscale 15
	scale 9

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Máquina diferencial
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=2XLZ4Z8LpEE"
literal "true"

\end_inset

 teletipo fue una invención que permitió la transmisión automática de texto
 a través de una red telegráfica.
 Fue inventado a finales del sigo XIX, y su desarrollo permitió una comunicación
 más rápida y eficiente que el telégrafo de 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Samuel_Morse"
literal "true"

\end_inset

 
\emph on
Samuel Morse
\emph default
.
 El teletipo utilizaba un sistema de impresión automática para recibir y
 transmitir texto, lo que permitió una comunicación más precisa y legible.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las terminales de teletipo (TTY) también se utilizaron como terminales de
 computadoras en las primeras décadas de la historia de las computadoras.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename teletipo.png
	lyxscale 20
	scale 12

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Teletipo Siemens t37h
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Avances de la guerra
\end_layout

\begin_layout Standard
El comienzo de la Segunda Guerra Mundial en 1939 motivó un gran avance en
 la computación debido a la necesidad de procesar grandes cantidades de
 datos y realizar cálculos complejos para apoyar los esfuerzos de la guerra.
\end_layout

\begin_layout Standard
El ordenador 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=aUXnhVrT4CI"
literal "true"

\end_inset

 Z3
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename zuse.jpg
	display false
	scale 15

\end_inset


\end_layout

\end_inset

es una máquina de computación construida en 1941 por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Konrad_Zuse"
literal "true"

\end_inset

 
\emph on
Konrad Zuse
\emph default
, un ingeniero y matemático alemán.
 Era una máquina electromecánica basada en relés, que utilizaba un sistema
 binario para representar los datos y los cálculos.
 El Z3 contaba con una memoria programable, lo que permitía al usuario programar
 la máquina para llevar a cabo diferentes tareas.
 Fue destruido en 1943 durante un bombardeo en Berlín.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename z3.png
	lyxscale 15
	scale 17

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Réplica del Zuse Z3 exhibida en Múnich
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=bN7AdQmd8So"
literal "true"

\end_inset

 Harvard Mark I
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename aiken.jpg
	display false
	scale 45

\end_inset


\end_layout

\end_inset

 es una computadora electromecánica construida en 1944 por IBM y patrocinada
 por el gobierno de los Estados Unidos.
 Fue diseñada por el matemático 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Howard_Aiken"
literal "true"

\end_inset

 
\emph on
Howard Aiken
\emph default
 y se encuentra en el Museo de la historia de la computación en la Universidad
 de Harvard.
 La Harvard Mark I fue una máquina de gran tamaño, medía 8 metros de largo,
 2 metros de alto y 2 metros de ancho, y utilizaba relés electromecánicos
 para llevar a cabo cálculos.
 La máquina era capaz de realizar aritmética básica y funcionaba con un
 sistema de tarjetas perforadas.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename mark1.png
	lyxscale 35
	scale 37

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Harvard Mark I
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=32o4qcYbWMA"
literal "true"

\end_inset

 ENIAC (Electronic Numerical Integrator And Computer) fue una computadora
 electrónica programable construida por el gobierno de los Estados Unidos
 en 1946.
 Era una máquina enorme, medía 30 metros de largo, 2 metros de alto y 3
 metros de ancho, y pesaba 27 toneladas.
 Utilizaba tecnología de válvulas electrónicas y era capaz de realizar cálculos
 numéricos complejos a alta velocidad.
 Fue utilizada para calcular los resultados de las explosiones nucleares
 y para resolver problemas científicos y técnicos en la industria.
 Fue inicialmente diseñada para calcular tablas de tiro de artillería destinadas
 al Laboratorio de Investigación Balística del Ejército de los Estados Unidos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Aunque la tecnología de válvulas era superior a la de relés, no fue hasta
 la invención del transistor en 1947 que las computadoras ganaron su verdadero
 poder de computo.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename eniac.png
	lyxscale 25
	scale 22

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Electronic Numerical Integrator And Computer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
La informática moderna
\end_layout

\begin_layout Standard
En la década de 1950, las computadoras eran enormes máquinas electromecánicas
 y electrónicas que ocupaban grandes espacios y requerían un equipo especializad
o para operarlas.
 Estas máquinas eran principalmente utilizadas para tareas de cálculo y
 procesamiento de datos, como la contabilidad y la investigación científica,
 y eran utilizadas principalmente por grandes empresas, organizaciones gubername
ntales y universidades.
 A pesar de su tamaño y complejidad, estas computadoras marcaron el comienzo
 de la era informática moderna y sentaron las bases para el desarrollo de
 las computadoras personales y de escritorio de las décadas siguientes.
\end_layout

\begin_layout Standard
FORTRAN
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename backus.jpg
	display false
	scale 18

\end_inset


\end_layout

\end_inset

 (Formula Translation) es uno de los primeros lenguajes de programación
 de computadora.
 Fue desarrollado en 1957 por un equipo de ingenieros de IBM liderado por
 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/John_Backus"
literal "true"

\end_inset

 
\emph on
John Backus
\emph default
.
 El objetivo de FORTRAN era proporcionar un lenguaje de programación que
 permitiese a los científicos y matemáticos escribir programas de manera
 eficiente y fácilmente para ser utilizado en las computadoras de ese entonces.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=1EWQYAfuMYw"
literal "true"

\end_inset

 PDP-1 (Programmed Data Processor-1) es un ordenador construido por la compañía
 Digital Equipment Corporation (DEC) en 1959.
 Fue el primer ordenador de la serie PDP y uno de los primeros de tipo minicompu
tadora.
 El PDP-1 fue un ordenador de tiempo compartido, lo que significa que varios
 usuarios podían acceder al sistema al mismo tiempo y compartir los recursos
 del ordenador.
 Esto fue un gran avance en comparación con los ordenadores anteriores,
 que solían ser utilizados por un solo usuario a la vez.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pdp1.jpg
	lyxscale 15
	scale 23

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Programmed Data Processor-1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
BASIC (Beginners All-Purpose Symbolic Instruction Code) es un lenguaje de
 programación creado en el verano de 1964, con el objetivo de desarrollar
 un lenguaje de programación fácil de aprender y usar para estudiantes no
 especialistas y principiantes en la programación.
 El lenguaje se basó en el lenguaje FORTRAN, pero con un enfoque en la simplicid
ad y la facilidad de uso.
\end_layout

\begin_layout Standard
El sistema 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=JQ8ZiT1sn88"
literal "true"

\end_inset

 NLS
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename engelbart.jpg
	display false
	scale 65

\end_inset


\end_layout

\end_inset

 (oN-Line System) fue un sistema de información desarrollado por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Douglas_Engelbart"
literal "true"

\end_inset

 
\emph on
Douglas Engelbart
\emph default
 y su equipo en 1968.
 Fue una de las primeras demostraciones de una interfaz gráfica de usuario
 (GUI), con un puntero del ratón sistema de hipertexto y ventanas.
 También introdujo varias características que se consideran fundamentales
 en la computación moderna, como el procesamiento de textos, el correo electróni
co, la videoconferencia y la colaboración en tiempo real.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename nls.png
	lyxscale 40
	scale 52

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
NLS (oN-Line System)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
MULTICS (Multiplexed Information and Computing Service) fue un sistema operativo
 desarrollado en 1969 por un equipo liderado por el MIT y Bell Labs.
 El objetivo de MULTICS era crear un sistema operativo de tiempo compartido
 que pudiera ser utilizado por varios usuarios simultáneamente y ofrecer
 servicios avanzados, como el procesamiento de archivos, el manejo de bases
 de datos y el procesamiento de informes.
 A pesar de sus avances, MULTICS tuvo problemas financieros y técnicos que
 retrasaron su desarrollo y limitaron su adopción.
 Aun así, muchas de las características y conceptos de MULTICS se convirtieron
 en estándar en la industria de los sistemas operativos modernos, como el
 manejo de permisos, el sistema de archivos y la seguridad.
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename thompsonritchie.jpg
	display false
	scale 40

\end_inset


\end_layout

\end_inset

Tras haber participado en el desarrollo de MULTICS, 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Ken_Thompson"
literal "true"

\end_inset

 
\emph on
Ken Thompson
\emph default
 y 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Dennis_Ritchie"
literal "true"

\end_inset

 
\emph on
Dennis Ritchie
\emph default
 iniciaron en 1970 la creación de un nuevo sistema operativo para la computadora
 DEC PDP-7.
 El proyecto fue bautizado originalmente como UNICS e inicialmente no tuvo
 apoyo económico por parte de los laboratorios Bell.
 Al año siguiente, Dennis Ritchie desarrolla el lenguaje de programación
 C, un sistema diseñado para ser eficiente en términos de tiempo de ejecución
 y uso de recursos, y fácil de portar a diferentes plataformas de hardware.
\end_layout

\begin_layout Standard
Los sistemas operativos existentes hasta el momento eran propietarios y
 solo funcionaban en una plataforma específica, es por esto que en 1972,
 Ken Thompson y Dennis Ritchie decidieron reescribir el código de UNICS
 pero esta vez en lenguaje C, dando así origen a UNIX.
 Este cambio significaba que UNIX podría ser fácilmente modificado para
 funcionar en otras computadoras y así otras variaciones podían ser desarrollada
s por otros programadores.
 Ahora, el código era más conciso y compacto, lo que se tradujo en un aumento
 en la velocidad de desarrollo de UNIX.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset

En 1973 en el Xerox PARC (Palo Alto Research Center), se desarrolló el 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=9H79_kKzmFs"
literal "true"

\end_inset

 Xerox Alto: un ordenador de tipo personal, con una interfaz gráfica de
 usuario, soporte para ventanas y un mouse.
 Además, Alto también tenía un sistema de gestión de archivos, un procesador
 de texto, una herramienta de dibujo y soporte para redes de computadoras.
 Aunque el Xerox Alto nunca fue comercializado, muchas de sus características
 y conceptos se convirtieron en estándar en la industria de los ordenadores
 personales.
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename alto.png
	lyxscale 10
	scale 19

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Xerox Alto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Primeras computadoras personales
\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=qv5b1Xowxdk"
literal "true"

\end_inset

 Altair 8800 fue una de las primeras computadoras personales en ser comercializa
das, lanzada en 1974.
 Fue un gran éxito de ventas y sentó las bases para el desarrollo de las
 computadoras personales que conocemos hoy en día.
 La Altair 8800 se vendía en kit y los usuarios debían armarla ellos mismos.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename altair8800.png
	lyxscale 20
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Altair 8800
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En los primeros años del sistema Unix los Laboratorios Bell autorizaron
 a las universidades, a utilizar el código fuente y adaptarlo a sus necesidades.
 A partir de dicha iniciativa, en 1977 nace en la universidad de Berkley
 el sistema operativo BSD (Berkeley Software Distribution).
 Sus principales contribuciones fueron la implementación de mejoras significativ
as en el sistema de archivos y en la red.
\end_layout

\begin_layout Standard
La IBM PC fue una de las computadoras más importantes en la historia de
 la informática, ya que sentó las bases para el estándar de computadora
 personal que se utiliza en la actualidad.
 Fue introducida por IBM en 1981 y se convirtió rápidamente en el estándar
 de la industria para las computadoras personales.
 Una de las características más importantes de la IBM PC fue su arquitectura
 abierta.
 A diferencia de otras computadoras personales de la época, la IBM PC tenía
 un diseño abierto que permitía a los usuarios y terceros desarrollar sus
 propios productos y programas para ella.
 Esto ayudó a impulsar un gran ecosistema de desarrolladores y fabricantes
 de periféricos que crearon una gran variedad de software y hardware para
 la computadora.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pc.jpg
	lyxscale 20
	scale 8

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
IBM PC
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
System V es una versión del sistema operativo UNIX desarrollado por Bell
 Labs en 1983.
 Fue una de las primeras versiones de UNIX en ser comercializada y distribuida
 ampliamente, y tuvo un gran impacto en el desarrollo de los sistemas operativos
 tipo UNIX.
 Aunque UNIX se convirtió en un estándar en la industria de la computación,
 no se consideraba 
\begin_inset Quotes fld
\end_inset

libre
\begin_inset Quotes frd
\end_inset

 debido a las restricciones en su uso y distribución impuestas por AT&T.
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename stallman.jpg
	display false
	scale 25

\end_inset


\end_layout

\end_inset

Ese mismo año fue fundado el movimiento GNU por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Richard_Stallman"
literal "true"

\end_inset

 
\emph on
Richard Stallman
\emph default
, un programador y defensor de la libertad de software.
 El objetivo principal del movimiento GNU es desarrollar un sistema operativo
 completo y gratuito basado en el estándar UNIX, de manera que cualquier
 persona pueda usar, estudiar, compartir y modificar el software sin restriccion
es.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El movimiento de software privativo había sido fundado con anterioridad
 en 1976 por Bill Gates a través de la denominada 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Carta_abierta_a_los_aficionados"
literal "true"

\end_inset

 carta abierta a los aficionados
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
X Windows es un sistema de ventanas para sistemas tipo UNIX.
 Fue desarrollado en el Massachusetts Institute of Technology (MIT) en 1984.
 El objetivo principal de X Windows era proporcionar un sistema de ventanas
 que pudiera ser utilizado en una variedad de sistemas, permitiendo una
 interfaz gráfica de usuario (GUI).
\end_layout

\begin_layout Standard
Minix
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename tanenbaum.jpg
	display false
	scale 13

\end_inset


\end_layout

\end_inset

 fue un sistema operativo educativo desarrollado en el año 1987 por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Andrew_S._Tanenbaum"
literal "true"

\end_inset

 
\emph on
Andrew S.
 Tanenbaum
\emph default
, para enseñar principios de diseño y funcionamiento de sistemas operativos
 a estudiantes universitarios.
 Originalmente diseñado para ser utilizado en computadoras IBM PC y compatibles,
 Minix tenía un diseño similar al de UNIX, pero con un conjunto reducido
 de herramientas y utilidades.
\end_layout

\begin_layout Standard
Mientras
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename linus.jpg
	display false
	scale 16

\end_inset


\end_layout

\end_inset

 estudiaba informática en la Universidad de Helsinki en 1991, 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Linus_Torvalds"
literal "true"

\end_inset

 
\emph on
Linus Torvalds
\emph default
 desarrolla un núcleo de sistema operativo como proyecto personal, basándose
 en el diseño de Minix.
 Hasta el momento el proyecto GNU había desarrollado una amplia gama de
 software, incluyendo un compilador, un intérprete de línea de comandos
 y diversas herramientas de programación.
 Sin embargo, faltaba un kernel, que es la parte del sistema operativo que
 administra los recursos del sistema, como la memoria y los procesos.
\end_layout

\begin_layout Standard
En resumen, Linux surgió como un proyecto personal de Linus Torvalds, pero
 con el tiempo se convirtió en una parte fundamental del proyecto GNU y
 en uno de los sistemas operativos de código abierto más utilizados y respetados
 de la industria tecnológica.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar material hasta llegar al presente.
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Arquitectura de la computadora
\end_layout

\begin_layout Section
Gabinete 
\end_layout

\begin_layout Standard
El gabinete de la PC es una carcasa que cubre y protege los componentes
 de una computadora.
 Sus principales funciones son:
\end_layout

\begin_layout Description
Protección El gabinete protege los componentes de la computadora de daños
 físicos, polvo y otros factores ambientales que pueden dañarlos.
\end_layout

\begin_layout Description
Organización Los gabinetes de PC están diseñados para mantener todos los
 componentes en su lugar y organizados de manera eficiente.
 Esto hace que sea más fácil para el usuario trabajar en la computadora
 y realizar mejoras o reparaciones.
\end_layout

\begin_layout Description
Refrigeración: Los gabinetes de PC también ayudan a mantener los componentes
 frescos mediante la circulación de aire a través de la carcasa.
 Muchos gabinetes tienen ventiladores y otros sistemas de enfriamiento integrado
s para evitar el sobrecalentamiento de la computadora.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gabinete.png
	lyxscale 20
	scale 18
	BoundingBox 100bp 100bp 900bp 900bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Gabinete Phobos Tg Xtech
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Placa madre
\end_layout

\begin_layout Standard
La placa madre es la pieza central de una computadora, encargada de conectar
 y comunicar todos los componentes esenciales del sistema.
 A través de sus conectores, la placa madre une la CPU, la memoria RAM,
 las unidades de almacenamiento, la tarjeta gráfica y otros dispositivos.
\end_layout

\begin_layout Standard
Además, la placa madre distribuye la energía eléctrica necesaria a todos
 los componentes a través de los conectores de alimentación, y controla
 los puertos de entrada/salida que permiten la comunicación de la computadora
 con dispositivos externos, como los puertos USB, de audio y de red.
\end_layout

\begin_layout Standard
La placa madre también incluye un chip de memoria ROM donde se almacena
 la BIOS, un programa que se encarga de configurar la computadora al encenderla
 y realizar pruebas iniciales del hardware.
\end_layout

\begin_layout Standard
La mayoría de las placas madre tienen un chip de audio integrado que proporciona
 capacidades de audio.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename motherboard.png
	lyxscale 20
	scale 25
	BoundingBox 0bp 0bp 1280bp 679bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Placa madre
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Fuente de alimentación
\end_layout

\begin_layout Standard
La PSU (Power Supply Unit) o fuente de alimentación se encarga de convertir
 la corriente eléctrica de la toma de corriente en la energía eléctrica
 necesaria para alimentar los componentes internos de la computadora.
\end_layout

\begin_layout Standard
Esta recibe la corriente eléctrica de la toma de corriente a través del
 cable de alimentación y la convierte en diferentes voltajes que son suministrad
os a los componentes de la computadora.
\end_layout

\begin_layout Standard
La PSU también protege los componentes de la computadora de sobretensiones,
 cortocircuitos y otros problemas eléctricos que pueden ocurrir.
 En caso de que se detecte una sobrecarga o falla, la PSU puede cortar el
 suministro de energía para proteger los componentes de la computadora.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename psu.jpg
	lyxscale 20
	scale 24

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Fuente de Alimentación
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Microprocesador
\end_layout

\begin_layout Standard
La CPU (Unidad Central de Procesamiento) es el componente principal de una
 computadora que realiza la mayoría de las operaciones de procesamiento
 de datos.
 Es un chip integrado que se coloca en el zócalo de la placa madre y está
 compuesto por varios núcleos (o cores) que trabajan en conjunto para ejecutar
 instrucciones y procesar datos.
\end_layout

\begin_layout Standard
La CPU es responsable de procesar y ejecutar los programas de software,
 manejar la entrada y salida de datos, y controlar los componentes del sistema,
 como la memoria RAM, el disco duro y las tarjetas de expansión.
 La velocidad y la capacidad de la CPU son factores clave que determinan
 el rendimiento general de una computadora.
\end_layout

\begin_layout Standard
Algunos procesadores modernos tienen gráficos integrados en su diseño.
 Estos gráficos integrados se denominan iGPU (unidad de procesamiento de
 gráficos integrados) y están diseñados para proporcionar capacidades gráficas
 básicas para aplicaciones informáticas y de juegos de baja exigencia.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Se podría hablar también de los registros.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename cpu.jpg
	lyxscale 20
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Intel Core i9
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Memoria RAM
\end_layout

\begin_layout Standard
La memoria RAM (Random Access Memory o Memoria de Acceso Aleatorio) es un
 tipo de memoria que se utiliza en las computadoras para almacenar temporalmente
 los datos y programas que están en uso.
 La RAM es un componente clave en el rendimiento general de una computadora,
 ya que proporciona un acceso rápido y aleatorio a los datos y programas
 que el procesador necesita para operar.
\end_layout

\begin_layout Standard
Cuando una aplicación o un programa se ejecuta en la computadora, los datos
 y las instrucciones necesarios se cargan en la memoria RAM desde el disco
 duro.
 La RAM permite que el procesador acceda rápidamente a estos datos y programas,
 lo que acelera el tiempo de ejecución y la velocidad de la computadora
 en general.
\end_layout

\begin_layout Standard
Además, la memoria RAM es una memoria 
\emph on
volátil
\emph default
, lo que significa que pierde todos los datos almacenados en ella cuando
 se apaga la computadora.
 Por lo tanto, es importante guardar los archivos y datos importantes en
 el disco duro o en otro dispositivo de almacenamiento persistente.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Aunque el microprocesador también tiene una memoria volátil llamada 
\emph on
registros
\emph default
, estos son mucho mas caros y en consecuencia pequeños.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ram.jpg
	lyxscale 20
	scale 21
	BoundingBox 0bp 350bp 2000bp 1650bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Memoria RAM Corsair Vengance DDR4
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Memoria secundaria
\end_layout

\begin_layout Standard
Un 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=3owqvmMf6No"
literal "true"

\end_inset

 disco duro es un dispositivo de almacenamiento de datos magnético que se
 utiliza en las computadoras para almacenar permanentemente archivos y programas.
 A diferencia de la memoria RAM, que es una memoria volátil y pierde todos
 los datos almacenados en ella cuando la computadora se apaga, el disco
 duro mantiene los datos almacenados incluso después del apagado de la computado
ra.
\end_layout

\begin_layout Standard
Una de las principales diferencias entre el disco duro y la memoria RAM
 es la velocidad.
 La memoria RAM proporciona un acceso rápido y aleatorio a los datos y programas
, lo que permite al procesador acceder a ellos rápidamente.
 En comparación, los discos duros son mucho más lentos en términos de velocidad
 de acceso, ya que el brazo de lectura/escritura necesita moverse físicamente
 para acceder a los datos en los platos.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás sea una buena idea presentar la jerarquía de la memoria aquí.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename disk.jpg
	lyxscale 20
	scale 10
	BoundingBox 0bp 100bp 1500bp 1400bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Disco rígido Seagate Barracuda 1TB
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset

Una SSD (Solid State Drive) es un dispositivo de almacenamiento de datos
 que utiliza memoria flash para almacenar permanentemente archivos y programas
 en la computadora.
 A diferencia de un disco duro tradicional, que utiliza platos magnéticos
 giratorios y cabezas de lectura/escritura para acceder a los datos, una
 SSD no tiene partes móviles y utiliza chips de memoria flash para almacenar
 y acceder a los datos.
\end_layout

\begin_layout Standard
La tecnología SSD es más rápida que la de un disco duro porque no hay partes
 mecánicas que necesiten moverse para acceder a los datos.
 En lugar de eso, los datos se almacenan en chips de memoria flash, que
 son mucho más rápidos para acceder y leer que los discos duros.
 Como resultado, las SSD proporcionan un mejor rendimiento en términos de
 velocidad de lectura/escritura y tiempo de acceso.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ssd.jpg
	lyxscale 20
	scale 10

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
SSD Kingston
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Placa de video
\end_layout

\begin_layout Standard
Una placa de video, también conocida como tarjeta gráfica, es un componente
 de hardware de la computadora que tiene como objetivo procesar y generar
 imágenes en la pantalla.
 Su función es liberar a la CPU (unidad central de procesamiento) de la
 computadora de la tarea de procesamiento gráfico, lo que permite que la
 CPU se concentre en otras tareas.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Además de su uso en gráficos, en el campo de la inteligencia artificial
 son comúnmente utilizadas para entrenar y ejecutar redes neuronales profundas.
 Esto se debe a que las placas de video tienen una arquitectura altamente
 paralela que les permite procesar grandes cantidades de datos de manera
 eficiente.
 Como resultado, las placas de video son ideales para el procesamiento masivo
 de datos que se requiere en la inteligencia artificial.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gpu.jpg
	lyxscale 20
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Tarjeta Gráfica NVIDIA RTX 2080 Ti
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Sistemas Operativos
\end_layout

\begin_layout Section
Proceso de arranque
\end_layout

\begin_layout Standard
Durante el arranque de una PC, ocurren varias cosas importantes que permiten
 que el sistema operativo se inicie correctamente y la computadora esté
 lista para su uso.
\end_layout

\begin_layout Standard
Al presionarse el botón de arranque se activa la fuente de alimentación
 de la computadora, la cual suministra la energía necesaria para que la
 placa madre comience a funcionar.
 A partir de aquí, comienza un proceso que consiste en varias etapas:
\end_layout

\begin_layout Description
POST
\begin_inset space ~
\end_inset

(Power
\begin_inset space ~
\end_inset

On
\begin_inset space ~
\end_inset

Self
\begin_inset space ~
\end_inset

Test) La placa madre realiza un autodiagnóstico para verificar que todos
 los componentes de hardware de la computadora estén funcionando correctamente.
 Si detecta algún problema, emitirá un mensaje de error y detendrá el proceso
 de arranque.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename post.jpg
	lyxscale 20
	scale 11

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Etapa de Autodiagnóstico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Boot
\begin_inset space ~
\end_inset

Loader A continuación la placa madre debe cargar un programa llamado 
\begin_inset Quotes fld
\end_inset


\emph on
cargador de arranque
\emph default

\begin_inset Quotes frd
\end_inset

.
 El cargador de arranque es un programa cuyo objetivo principal es cargar
 el núcleo del sistema operativo.
 El cargador de arranque mas utilizado en Linux es 
\begin_inset Quotes fld
\end_inset


\emph on

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\backslash
;
\end_layout

\end_inset

GRUB
\emph default

\begin_inset Quotes frd
\end_inset

; y 
\begin_inset Quotes fld
\end_inset


\emph on

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faWindows 
\backslash
;
\end_layout

\end_inset

bootmgr
\emph default

\begin_inset Quotes frd
\end_inset

 es el proporcionado por los sistemas modernos de Windows.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename grub.png
	lyxscale 40
	scale 22

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

GRUB
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename bootmgr.png
	lyxscale 50
	scale 58

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faWindows 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

bootmgr
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Núcleo A continuación, el núcleo del sistema operativo toma el control de
 la computadora.
 Durante sus tareas iniciales se encargará de identificar el hardware disponible
, cargar los controladores necesarios y montar el sistema de archivos del
 sistema.
 Finalmente dará comienzo al primer programa de usuario, a partir del cual
 se ejecutaran todos los demás programas.
\end_layout

\begin_layout Description
Init En los sistemas Linux, el programa inicial del sistema operativo se
 llama 
\begin_inset Quotes fld
\end_inset


\emph on
init
\emph default

\begin_inset Quotes frd
\end_inset

.
 Init se encargará de cargar los scripts de arranque del sistema, así como
 también ejecutar los servicios esenciales para el funcionamiento del mismo,
 y proveer al usuario de un entorno gráfico o de linea de comandos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En la actualidad se desarrolló 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Systemd"
literal "true"

\end_inset

 
\emph on
systemd
\emph default

\begin_inset Quotes frd
\end_inset

 para reemplazar el sistema de inicio (init) heredado de los sistemas operativos
 estilo UNIX System V y Berkeley Software Distribution (BSD).
\end_layout

\end_inset


\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
Un sistema operativo es un conjunto de programas y herramientas que controlan
 y coordinan las actividades de una computadora o dispositivo electrónico,
 y permiten a los usuarios interactuar con el hardware y el software de
 manera sencilla y eficiente.
 Está compuesto por un núcleo (o 
\emph on
kernel
\emph default
) que tiene control completo sobre el hardware en el que corre, y una serie
 de programas utilitarios que se comunican con el.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás convenga poner la descripción antes.
 También estaría bueno hacer mas hincapié en la abstracción del hardware.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename kernel.png
	lyxscale 30
	scale 15

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Comunicación entre aplicaciones, núcleo y hardware
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las funciones principales de un sistema operativo incluyen:
\end_layout

\begin_layout Itemize
Gestionar el hardware: El sistema operativo es responsable de gestionar
 el hardware de la computadora, como el procesador, la memoria, el disco
 duro, la tarjeta gráfica, entre otros.
 Controla cómo se utilizan estos recursos y asigna la cantidad adecuada
 de memoria y procesador a cada aplicación.
\end_layout

\begin_layout Itemize
Proporcionar una interfaz de usuario: El sistema operativo proporciona una
 interfaz de usuario que permite a los usuarios interactuar con el ordenador
 y ejecutar aplicaciones y programas.
\end_layout

\begin_layout Itemize
Gestionar los archivos y directorios: El sistema operativo se encarga de
 gestionar los archivos y directorios del ordenador, lo que permite a los
 usuarios crear, modificar, copiar y eliminar archivos y carpetas.
\end_layout

\begin_layout Standard
Entre las principales características de un sistema operativo se encuentran:
\end_layout

\begin_layout Itemize
Multitarea: Un sistema operativo permite que varias aplicaciones se ejecuten
 al mismo tiempo y asigna los recursos necesarios para que funcionen correctamen
te.
\end_layout

\begin_layout Itemize
Multiusuario: Un sistema operativo puede ser utilizado por varios usuarios
 al mismo tiempo y garantiza que cada usuario tenga sus propios archivos
 y configuraciones.
\end_layout

\begin_layout Itemize
Portabilidad: Los sistemas operativos pueden ser instalados en diferentes
 tipos de hardware, lo que los hace altamente portables.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Se podría hacer referencia a que anteriormente no eran multi.
 También se podría agregar multisesión.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Núcleo
\end_layout

\begin_layout Standard
El 
\emph on
kernel
\emph default
 (o núcleo) de un sistema operativo es la parte central y más fundamental
 del mismo.
 Es responsable de controlar el acceso a los recursos del hardware, gestionar
 los procesos, la memoria y la entrada/salida, y proporcionar una interfaz
 para que las aplicaciones interactúen con el hardware del sistema.
\end_layout

\begin_layout Standard
Podemos consultar cual es el núcleo que se esta ejecutando con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

uname -r
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

[Environment]::OSVersion
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El núcleo se ejecuta en modo privilegiado, lo que significa que tiene acceso
 directo al hardware y puede ejecutar instrucciones que otros programas
 no pueden.
\end_layout

\begin_layout Standard
Para casi cualquier tarea las aplicaciones de usuario necesitan pedirle
 permiso al kernel, a través de una instrucción denominada 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Llamada_al_sistema"
literal "true"

\end_inset


\emph on
 llamada a sistema
\emph default

\begin_inset Quotes frd
\end_inset

.
 Cuando se produce una llamada a sistema el CPU deja de ejecutar el programa,
 y comienza a ejecutar la funcionalidad del núcleo requerida, luego de la
 cual se continua con la ejecución del programa.
\end_layout

\begin_layout Section
Terminal
\end_layout

\begin_layout Standard
A menudo se utilizan términos como 
\begin_inset Quotes fld
\end_inset

terminal
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

consola virtual
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

emulador de terminal
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

intérprete de línea de comandos
\begin_inset Quotes frd
\end_inset

 de forma indistinta, lo que puede llevar a cierta confusión.
 A continuación, se explican las diferencias entre estos términos:
\end_layout

\begin_layout Description
Terminal Se refiere a el o los dispositivos físicos que se utilizan para
 interactuar con un ordenador mediante la entrada y salida de texto.
 En la actualidad está compuesta principalmente por el teclado y el monitor.
\end_layout

\begin_layout Description
Consola
\begin_inset space ~
\end_inset

virtual Es una aplicación implementada dentro del núcleo que provee acceso
 al sistema simulando una terminal de teletipo.
 En los sistemas tipo Unix se puede acceder a ellas presionando 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Ctrl+Alt+F1, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Ctrl+Alt+F2, etc.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Habría que explicar porque sigue existiendo y conviviendo con un emulador
 de terminal.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename vconsole.png
	lyxscale 50
	scale 62

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Consola virtual en Ubuntu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Emulador
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

terminal Es un programa de usuario que permite interactuar con un sistema
 operativo a través de una ventana en un entorno gráfico.
 Los emuladores de terminal son comúnmente utilizados para acceder a sistemas
 remotos o para ejecutar aplicaciones de línea de comandos en sistemas operativo
s.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename qterminal.png
	lyxscale 50
	scale 31

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Qterminal en Lubuntu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
Para saber que emulador de terminal se está utilizando se puede escribir
 el comando:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo $TERM
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Shell También llamado 
\begin_inset Quotes fld
\end_inset

interprete de linea de comandos
\begin_inset Quotes frd
\end_inset

, es un programa que permite a un usuario interactuar con el sistema operativo
 mediante la ejecución de comandos a través de una interfaz de línea de
 comandos.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Habría que mencionar cual se va a usar en la materia.
 Se podría agregar captura de otros interpretes de linea de comandos.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
Para saber que interprete de linea de comandos se está utilizando se puede
 escribir el comando:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo $SHELL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Interfaz gráfica
\end_layout

\begin_layout Standard
Una interfaz gráfica de usuario es una forma de interactuar con un programa
 o sistema operativo mediante el uso de elementos gráficos, como ventanas,
 iconos, botones y menús, en lugar de usar comandos de texto en una línea
 de comandos.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Habría que explicar que en Linux la GUI es un programa de usuario opcional.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
A las interfaces de usuario gráficas las llamamos 
\begin_inset Quotes fld
\end_inset

GUI
\begin_inset Quotes frd
\end_inset

 por sus siglas en inglés 
\begin_inset Quotes fld
\end_inset


\emph on
Graphical User Interface
\emph default

\begin_inset Quotes frd
\end_inset

; en cambio a las interfaces de texto las llamamos 
\begin_inset Quotes fld
\end_inset

CLI
\begin_inset Quotes frd
\end_inset

 por las siglas 
\begin_inset Quotes fld
\end_inset


\emph on
Command Line Interface
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El entorno de escritorio, el sistema de ventanas, el servidor de pantalla
 y el gestor de ventanas son componentes importantes de un sistema operativo
 gráfico que trabajan juntos para proporcionar una interfaz de usuario intuitiva
 y fácil de usar.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gui.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Capas de una GUI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
A continuación, se describen las funciones de cada uno de ellos:
\end_layout

\begin_layout Description
Entorno
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

escritorio Es un conjunto de aplicaciones, herramientas y utilidades que
 proporcionan una interfaz de usuario gráfica para un sistema operativo.
 El entorno de escritorio incluye menús, barras de herramientas, iconos,
 fondos de pantalla, gestores de archivos y otras herramientas que hacen
 que el uso del sistema operativo sea más fácil e intuitivo para el usuario.
 Algunos ejemplos de entornos de escritorio son 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.gnome.org/"
literal "true"

\end_inset

 GNOME, 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://kde.org/es/"
literal "true"

\end_inset

 KDE, 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.xfce.org/"
literal "true"

\end_inset

 XFCE y 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "http://www.lxde.org/"
literal "true"

\end_inset

 LXDE.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ubuntu.png
	lyxscale 50
	scale 21

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Unity en Ubuntu 22.10
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Sistema
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

ventanas Es un sistema que permite la creación y manipulación de ventanas
 de aplicaciones en la pantalla.
 El sistema de ventanas se encarga de administrar la posición, tamaño, aparienci
a y eventos de las ventanas en la pantalla.
 También se encarga de la gestión de los recursos gráficos, como el uso
 de la memoria, la gestión de la entrada y salida de datos, y el manejo
 de la interacción entre aplicaciones.
 Algunos ejemplos de sistemas de ventanas son X11 y 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://wayland.freedesktop.org/"
literal "true"

\end_inset

 Wayland.
\end_layout

\begin_layout Description
Servidor
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

pantalla Es un programa que se ejecuta en el sistema operativo y se encarga
 de controlar la pantalla, el teclado y el ratón del sistema.
 El servidor de pantalla recibe la entrada de teclado y ratón y la envía
 a las aplicaciones en ejecución en el sistema.
 También se encarga de mostrar la salida gráfica de las aplicaciones en
 la pantalla.
 El servidor de pantalla más utilizado en Linux es 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.x.org/wiki/"
literal "true"

\end_inset

 Xorg.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Description
Gestor
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

ventanas Es un programa que se ejecuta en el entorno de escritorio y que
 se encarga de administrar la apariencia y el comportamiento de las ventanas
 de las aplicaciones.
 El gestor de ventanas proporciona una variedad de características, como
 la decoración de ventanas, la administración de escritorios virtuales,
 la configuración de atajos de teclado, y la gestión de la colocación de
 ventanas en la pantalla.
 Algunos ejemplos de gestores de ventanas son 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "http://www.compiz.org/"
literal "true"

\end_inset

 Compiz, 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "http://openbox.org/wiki/Main_Page"
literal "true"

\end_inset

 Openbox y 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://i3wm.org/"
literal "true"

\end_inset

 i3.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename i3.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Gestor de ventanas i3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Distribuciones
\end_layout

\begin_layout Standard
Las distribuciones de Linux son sistemas operativos basados en el kernel
 de Linux, que están compuestos por una combinación de software libre y
 de código abierto, como aplicaciones, controladores, herramientas de gestión
 de paquetes, etc.
\end_layout

\begin_layout Standard
Existen muchas distribuciones de Linux diferentes, como 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.debian.org/index.es.html"
literal "true"

\end_inset

 Debian, 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://ubuntu.com/"
literal "true"

\end_inset

 Ubuntu, 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.redhat.com/es"
literal "true"

\end_inset

 Red Hat, 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://archlinux.org/"
literal "true"

\end_inset

 Arch Linux, entre otras.
 Cada distribución tiene sus propias características, objetivos y filosofía,
 y están diseñadas para satisfacer las necesidades de diferentes usuarios
 y aplicaciones.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El concepto de distribución de Linux se hereda de los sistemas operativos
 estilo UNIX donde las universidades comenzaron a desarrollar sus propias
 versiones, como System V y BSD.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las distribuciones de Linux existen porque el software de código abierto
 permite a los usuarios y desarrolladores acceder, modificar y distribuir
 el código fuente del software.
 Esto ha permitido que muchas personas y comunidades puedan desarrollar
 y distribuir sus propias versiones personalizadas de Linux.
 Además, al ser un sistema operativo altamente personalizable y adaptable,
 cada distribución puede estar diseñada para satisfacer las necesidades
 específicas de diferentes usuarios, como por ejemplo para usuarios de servidore
s, programadores, usuarios de escritorio, entre otros.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename distributions.png
	lyxscale 30
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\backslash
;
\end_layout

\end_inset

Linea de tiempo de distribuciones de Linux
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Proceso de apagado
\end_layout

\begin_layout Standard
Antes de finalizar la ejecución del sistema operativo, se inicia un proceso
 que cierra todos los programas y servicios que se están ejecutando en la
 computadora.
 Luego, se guardan todos los datos pendientes y se asegura que todos los
 dispositivos de almacenamiento, como los discos duros o las unidades flash
 USB, estén en un estado seguro antes de apagar la alimentación.
 Finalmente, se envía una señal al hardware para que se apague por completo
 y se desconecte la alimentación en caso de ser necesario.
 
\end_layout

\begin_layout Standard
Hay varias opciones disponibles para 
\begin_inset Quotes fld
\end_inset

apagar
\begin_inset Quotes frd
\end_inset

 una computadora, cada una con diferentes efectos.
\end_layout

\begin_layout Description
Apagado Cuando se selecciona la opción de 
\begin_inset Quotes fld
\end_inset

apagar
\begin_inset Quotes frd
\end_inset

, la computadora cierra todos los programas y procesos en ejecución y se
 apaga completamente.
 La próxima vez que se encienda la computadora, se iniciará el proceso de
 arranque completo.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

shutdown
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

shutdown /s
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Reinicio Al seleccionar la opción 
\begin_inset Quotes fld
\end_inset

reiniciar
\begin_inset Quotes frd
\end_inset

, la computadora cierra todos los programas y procesos en ejecución, se
 apaga brevemente y luego se reinicia automáticamente.
 Esta opción es útil para solucionar problemas de hardware o software y
 para actualizar el sistema operativo.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

reboot
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

shutdown /r
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Hibernación La opción de 
\begin_inset Quotes fld
\end_inset

hibernar
\begin_inset Quotes frd
\end_inset

 guarda todos los datos y configuraciones del sistema en el disco duro y
 luego apaga la computadora.
 Cuando se vuelve a encender la computadora, el sistema restaura automáticamente
 los datos y la configuración de la sesión anterior.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Se podría mencionar que este proceso ocurre dentro de un archivo o una partición.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

systemctl hibernate
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

shutdown /h
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Suspensión La opción 
\begin_inset Quotes fld
\end_inset

suspender
\begin_inset Quotes frd
\end_inset

 pone la computadora en un estado de bajo consumo de energía, dejando alimentada
 solamente la memoria RAM.
 De esta manera los programas y procesos en ejecución se conservan y la
 computadora puede volver a su estado anterior cuando se reanude la actividad.
 Esta opción es útil para ahorrar energía y reanudar rápidamente el trabajo
 en curso.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

systemctl suspend
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si se llega a producir un corte en el suministro eléctrico, el estado de
 la computadora se pierde pues la RAM será incapaz de retener su información.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Chapter
Conceptos de programación
\end_layout

\begin_layout Section
¿Que es la programación?
\end_layout

\begin_layout Standard
La programación es el proceso de diseñar, escribir, probar y mantener el
 código informático.
 En términos más simples, la programación es la forma en que los desarrolladores
 crean software, aplicaciones y sistemas.
\end_layout

\begin_layout Standard
El proceso de programación implica varios pasos, que incluyen la definición
 del problema que se está tratando de resolver, la identificación de los
 requisitos y especificaciones necesarios para crear la solución, la escritura
 del código en un lenguaje de programación, la realización de pruebas para
 asegurarse de que el software funciona correctamente y la documentación
 del código para que otros desarrolladores puedan entender y trabajar en
 él.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename flujo.png
	lyxscale 30
	scale 13

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diagrama del flujo de un programa
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Lenguaje de programación
\end_layout

\begin_layout Standard
Un lenguaje de programación es un conjunto de reglas, símbolos y palabras
 clave que se utilizan para comunicar instrucciones a una computadora.
 Estos lenguajes permiten a los programadores crear software, aplicaciones
 y sistemas, al proporcionar un medio para escribir código en un formato
 que la máquina pueda entender y ejecutar.
\end_layout

\begin_layout Standard
Los lenguajes de programación se utilizan para describir las acciones que
 una computadora debe realizar, como realizar cálculos matemáticos, interactuar
 con dispositivos periféricos, almacenar y recuperar datos, y responder
 a las entradas del usuario.
 Los lenguajes de programación pueden variar en complejidad y enfoque, y
 algunos se centran en tareas específicas, mientras que otros son más generales
 y versátiles.
\end_layout

\begin_layout Standard
En esencia, un lenguaje de programación es una herramienta para crear software
 y sistemas informáticos, permitiendo a los programadores transformar sus
 ideas en código ejecutable.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En esta materia aprenderemos el lenguaje de programación de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Bash"
literal "true"

\end_inset


\family typewriter
 bash
\family default

\begin_inset Quotes frd
\end_inset

.
 A lo largo de la carrera también aprenderán el lenguaje 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Python"
literal "true"

\end_inset


\family typewriter
 python
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Niveles de lenguajes
\end_layout

\begin_layout Standard
Los lenguajes de programación se pueden clasificar en tres niveles: alto,
 bajo y binario.
\end_layout

\begin_layout Description
Alto Estos lenguajes son más cercanos al lenguaje natural humano y se utilizan
 para escribir programas complejos de manera más fácil y rápida.
 Ejemplos de lenguajes de programación de alto nivel incluyen Python, Java,
 C++, Ruby, PHP, entre otros.
 Estos lenguajes tienen una sintaxis más amigable para el programador y
 se encargan de muchos de los detalles de bajo nivel, como la administración
 de memoria y el manejo de errores.
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hola mundo!
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Bajo Estos lenguajes están más cerca del lenguaje de la máquina y se utilizan
 para escribir programas que interactúan directamente con el hardware del
 ordenador.
 Ejemplos de lenguajes de programación de bajo nivel incluyen el lenguaje
 ensamblador y el lenguaje C.
 Estos lenguajes requieren que el programador tenga un conocimiento más
 detallado del hardware y de la forma en que se maneja la memoria.
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=make"
inline false
status open

\begin_layout Plain Layout

.global _start         # gcc -nostdlib -no-pie hola.s
\end_layout

\begin_layout Plain Layout

.text
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

mensaje: .ascii  "Hola mundo!
\backslash
n"
\end_layout

\begin_layout Plain Layout

_start:
\end_layout

\begin_layout Plain Layout

    mov $1, %rax       # La llamada a sistema 1 es write
\end_layout

\begin_layout Plain Layout

    mov $1, %rdi       # El descriptor 1 es la salida estándar
\end_layout

\begin_layout Plain Layout

    mov $mensaje, %rsi # Direccion de memoria del mensaje
\end_layout

\begin_layout Plain Layout

    mov $12, %rdx      # Cantidad de bytes
\end_layout

\begin_layout Plain Layout

    syscall            # write(1, mensaje, 12)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    mov $60, %rax      # La llamada a sistema 60 es exit
\end_layout

\begin_layout Plain Layout

    mov $0, %rdi       # Queremos devolver el numero 0
\end_layout

\begin_layout Plain Layout

    syscall            # exit(0)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
binario El lenguaje binario es el lenguaje de máquina utilizado por los
 ordenadores para ejecutar programas.
 Este lenguaje está compuesto de ceros y unos, que representan instrucciones
 que el procesador del ordenador puede entender y ejecutar directamente.
 Es muy difícil y tedioso para los programadores escribir directamente en
 lenguaje binario, por lo que se utilizan los lenguajes de programación
 de nivel alto y bajo para crear programas que luego se traducen a lenguaje
 binario.
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=S,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

  401000:    48 6f 6c 6c          # H o l a
\end_layout

\begin_layout Plain Layout

  401004:    20 6d 75 6e 64 6f    #   m u n d o
\end_layout

\begin_layout Plain Layout

  40100a:    21 0a                # ! 
\backslash
n
\end_layout

\begin_layout Plain Layout

  40100c:    48 c7 c0 01 00 00 00 # mov $1, %rax
\end_layout

\begin_layout Plain Layout

  401013:    48 c7 c7 01 00 00 00 # mov $1, %rdi
\end_layout

\begin_layout Plain Layout

  40101a:    48 c7 c6 00 10 40 00 # mov $mensaje, %rsi
\end_layout

\begin_layout Plain Layout

  401021:    48 c7 c2 0c 00 00 00 # mov $12, %rdx
\end_layout

\begin_layout Plain Layout

  401028:    0f 05                # syscall
\end_layout

\begin_layout Plain Layout

  40102a:    48 c7 c0 3c 00 00 00 # mov $60, %rax
\end_layout

\begin_layout Plain Layout

  401031:    48 c7 c7 00 00 00 00 # mov $0, %rdi
\end_layout

\begin_layout Plain Layout

  401038:    0f 05                # syscall
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Compiladores e interpretes
\end_layout

\begin_layout Standard
Un 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://youtu.be/fQpmyan9dOs?t=180"
literal "true"

\end_inset

 intérprete y un compilador son dos tipos de programas que se utilizan para
 convertir el código fuente escrito por un programador en instrucciones
 ejecutables por una computadora.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Habría que agregar un gráfico mostrando el tiempo de ejecución de cada uno.
\end_layout

\end_inset


\end_layout

\begin_layout Description
Interprete Un intérprete es un programa que lee el código fuente de un programa
 y lo traduce en instrucciones ejecutables en tiempo real.
 El intérprete lee una línea de código fuente, la traduce a lenguaje de
 máquina y la ejecuta antes de pasar a la siguiente línea.
 Debido a que el intérprete realiza la traducción y la ejecución de cada
 línea a medida que se lee el código, puede ser más lento que un compilador.
 Sin embargo, el intérprete tiene la ventaja de que el programador puede
 ejecutar el código directamente sin necesidad de compilarlo previamente.
\end_layout

\begin_layout Description
Compilador Un compilador, por otro lado, es un programa que traduce todo
 el código fuente a lenguaje de máquina en un solo paso antes de su ejecución.
 El compilador lee todo el código fuente del programa y lo traduce en un
 archivo ejecutable que puede ser utilizado por la computadora sin necesidad
 de leer el código fuente original nuevamente.
 Debido a que el código fuente se traduce y compila solo una vez, el código
 compilado se ejecuta generalmente más rápido que el código interpretado.
 Sin embargo, el proceso de compilación puede llevar más tiempo que el proceso
 de interpretación.
\end_layout

\begin_layout Section
Otros conceptos
\end_layout

\begin_layout Description
Código
\begin_inset space ~
\end_inset

fuente El código fuente de un programa es el conjunto de instrucciones o
 comandos escritos por un programador en un lenguaje de programación determinado
; es el 
\begin_inset Quotes fld
\end_inset

texto
\begin_inset Quotes frd
\end_inset

 legible por humanos que se escribe en un archivo de código fuente y que
 debe ser traducido o compilado en lenguaje de máquina para que la computadora
 pueda entenderlo y ejecutar el programa.
\end_layout

\begin_layout Description
Código
\begin_inset space ~
\end_inset

abierto 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename opensource.png
	display false
	scale 3.5

\end_inset


\end_layout

\end_inset

El término 
\begin_inset Quotes fld
\end_inset

código abierto
\begin_inset Quotes frd
\end_inset

 se refiere a un tipo de software en el cual el código fuente está disponible
 públicamente y puede ser modificado por cualquier persona.
 En el modelo de código abierto, los desarrolladores de software pueden
 trabajar juntos para mejorar y expandir el software existente.
\end_layout

\begin_layout Description
Software
\begin_inset space ~
\end_inset

libre 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename fsf.png
	display false
	scale 5.5

\end_inset


\end_layout

\end_inset

El software libre es aquel que se distribuye con una licencia que permite
 a los usuarios tener acceso al código fuente del programa y redistribuir
 versiones modificadas del mismo sin tener que pagar regalías o cargos adicional
es.
 En general, dicha licencia establece los términos y condiciones bajo los
 cuales se puede usar, modificar y distribuir el software.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Se podría agregar algún enlace que explique las licencias.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El software libre suele estar disponible gratuitamente, sin embargo no es
 obligatorio que sea así, por lo tanto no hay que asociar software «libre»
 a «gratuito» ya que, conservando su carácter de libre, puede ser distribuido
 comercialmente.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Description
IDE Un IDE (Integrated Development Environment) es un conjunto de herramientas
 y características que se combinan en una única aplicación para hacer más
 fácil y eficiente el proceso de desarrollo de software.
\end_layout

\begin_deeper
\begin_layout Standard
Típicamente incluye un editor de código que proporciona herramientas de
 resaltado de sintaxis y autocompletado, lo que facilita la escritura de
 código.
 Además, un IDE suele incluir un depurador que ayuda a identificar y corregir
 errores en el código.
 También puede tener herramientas de compilación y construcción, que permiten
 compilar y empaquetar el código en un archivo ejecutable o en otro formato
 adecuado para su distribución.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename visualstudio.png
	lyxscale 30
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Visual Studio Code
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Sistema de archivos
\end_layout

\begin_layout Standard
Aunque la 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Memoria_principal"
literal "true"

\end_inset

 memoria principal
\begin_inset Quotes frd
\end_inset

 es esencial para el funcionamiento de una computadora, esta es de acceso
 volátil, lo que significa que se borra cuando se apaga la computadora.
 Por lo tanto, la memoria RAM solo <puede almacenar temporalmente los programas
 y datos que están en uso en ese momento.
\end_layout

\begin_layout Standard
En este capítulo explicaremos como funcionan las llamadas 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Memoria_secundaria"
literal "true"

\end_inset

 memorias secundarias
\begin_inset Quotes frd
\end_inset

 de la computadora, como el disco rígido o una unidad de estado solido.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename jerarquia.png
	lyxscale 60
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Jerarqu%C3%ADa_de_memoria"
literal "true"

\end_inset

 Jerarquía de la memoria
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás valga la pena mover el gráfico a la sección de arquitectura.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Acceso aleatorio y secuencial
\end_layout

\begin_layout Standard
Un dispositivo de acceso aleatorio, como una unidad de estado sólido o USB,
 permite el acceso directo a cualquier ubicación en el medio de almacenamiento.
 Esto significa que se puede acceder a cualquier archivo o dato almacenado
 en el dispositivo sin tener que pasar por los datos que están almacenados
 
\begin_inset Quotes fld
\end_inset

antes
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

después
\begin_inset Quotes frd
\end_inset

 en el dispositivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Puesto que los dispositivos de acceso aleatorio son muy rápidos, son ideales
 para almacenar programas y mejorar el rendimiento general de la computadora.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por otro lado, un dispositivo de acceso secuencial, como un disco rígido
 o DVD, requiere que los datos se lean en secuencia, desde el principio
 del medio de almacenamiento hasta el final.
 Esto significa que para acceder a un archivo o dato específico, el dispositivo
 debe leer los datos almacenados antes de llegar al archivo o dato deseado.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="65text%">
<column alignment="center" valignment="middle" width="25text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename chr.png
	lyxscale 35
	scale 26
	BoundingBox 150bp 50bp 900bp 1000bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Description
A Pista
\end_layout

\begin_layout Description
B Sector geométrico
\end_layout

\begin_layout Description
C Sector de pista
\end_layout

\begin_layout Description
D Grupo
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Estructura de un disco
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las arquitecturas de computadora modernas suelen utilizar además de una
 memoria de acceso directo, otra de acceso secuencial.
 Esto es puesto que pese a son mas lentas, son mas baratas y de mayor capacidad,
 lo que los hace ideales como medios de respaldo.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Particiones
\end_layout

\begin_layout Standard
Una partición es una sección lógica de un disco duro u otro dispositivo
 de almacenamiento que se trata como si fuera un disco separado.
 Una partición se crea mediante la división del espacio de almacenamiento
 disponible en el dispositivo en secciones separadas.
 Cada partición tiene su propio sistema de archivos y puede contener archivos
 y datos independientes de las demás particiones.
\end_layout

\begin_layout Standard
Las particiones se utilizan para varios fines, como separar el sistema operativo
 y los archivos del usuario, o para crear diferentes áreas de almacenamiento
 para diferentes propósitos, como la música, los documentos y las imágenes.
 También se pueden utilizar para instalar varios sistemas operativos en
 una sola unidad de disco duro.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Habría que comentar que las particiones DEBEN tener un sistema de archivos
 para poder ser utilizadas.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename particiones.png
	lyxscale 40
	scale 31

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Particionado de un dispositivo de almacenamiento
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para observar los discos y particiones de un sistema podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

lsblk
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

Get-Partition
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
Un sistema de archivos es una estructura lógica y organizada de datos que
 se utiliza para almacenar y recuperar información en un medio de almacenamiento.
 Sin un sistema de archivos, los datos colocados en un medio de almacenamiento
 serían un gran cuerpo de datos sin manera de saber dónde termina un dato
 y comienza el siguiente.
\end_layout

\begin_layout Standard
Sus principales funciones son:
\end_layout

\begin_layout Description
Gestión
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

espacio El sistema de archivos se encarga de gestionar la manera en que
 los archivos son almacenados en un dispositivo de almacenamiento de datos.
 Esto incluye entre otras cosas, la asignación de espacio en disco para
 cada archivo, la administración del espacio libre y la organización de
 los datos de manera eficiente.
\end_layout

\begin_layout Description
Organización El sistema de archivos organiza los archivos en una jerarquía
 de directorios y subdirectorios, lo que facilita su búsqueda y recuperación.
\end_layout

\begin_layout Description
Permisos El sistema de archivos puede incluir medidas de seguridad para
 proteger los datos almacenados en el medio de almacenamiento, como permisos
 de acceso, y encriptación de datos.
\end_layout

\begin_layout Description
Metadatos Un sistema de archivos almacena una variedad de metadatos que
 proporcionan información sobre los archivos y directorios que se almacenan
 en el dispositivo de almacenamiento.
 Algunos de los metadatos más comunes que se almacenan en un sistema de
 archivos son el nombre del archivo, su tamaño, fecha de creación y modificación
, etc.
\end_layout

\begin_layout Description
Integridad Un sistema de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Journaling"
literal "true"

\end_inset

 
\emph on
journaling
\emph default

\begin_inset Quotes frd
\end_inset

 (o diario) es una técnica utilizada para proteger la integridad de los
 datos.
 Este sistema funciona registrando todos los cambios que se realizan en
 el sistema de archivos en un registro o diario antes de que los cambios
 sean efectuados en el sistema de archivos.
 En caso de un fallo del sistema o un corte de energía, el sistema de journaling
 puede utilizar la información en el registro para volver al estado anterior
 del sistema de archivos, evitando así la pérdida de datos o la corrupción
 del sistema de archivos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En los sistemas Linux, el sistema de archivos mas utilizados es 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Ext4"
literal "true"

\end_inset

 
\emph on
ext4
\emph default

\begin_inset Quotes frd
\end_inset

, mientras que en los sistemas Windows se utiliza 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/NTFS"
literal "true"

\end_inset

 
\emph on
NTFS
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Estructura de directorios
\end_layout

\begin_layout Standard
Los sistemas operativos utilizan archivos y directorios para organizar y
 almacenar información en un dispositivo de almacenamiento.
 Los archivos contienen los datos que los usuarios crean y manipulan, mientras
 que los directorios proporcionan una forma de organizar y acceder a los
 archivos de manera lógica y fácil de entender.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Habría que aclarar que los directorios son un tipo especial de archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los términos carpeta y directorio tienen el mismo significado.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La jerarquía de directorios en un sistema de archivos se llama árbol de
 directorios.
 El nivel superior del árbol de directorios se llama directorio raíz, que
 contiene todos los demás directorios y archivos en el sistema de archivos.
 A medida que se desciende por el árbol de directorios, los nombres de los
 directorios y los archivos se combinan para formar rutas de acceso a los
 archivos y directorios individuales.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En los sistemas Linux existe un solo directorio raíz llamado 
\begin_inset Quotes fld
\end_inset

/
\begin_inset Quotes frd
\end_inset

, en donde luego se 
\begin_inset Quotes fld
\end_inset

montan
\begin_inset Quotes frd
\end_inset

 el resto de los dispositivos.
 En los sistemas Windows cada partición tiene su propio directorio raíz
 llamado 
\begin_inset Quotes fld
\end_inset


\backslash

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para navegar a través de los directorios del sistema en un entorno gráfico,
 utilizamos un programa denominado 
\begin_inset Quotes fld
\end_inset

administrador de archivos
\begin_inset Quotes frd
\end_inset

.
 En dicho programa podemos recorrer la estructura del sistema de archivos
 mediante una serie de clicks de mouse en iconos, botones y menúes.
\end_layout

\begin_layout Standard
En esta sección aprenderemos a llevar a cabo esas mismas acciones, pero
 desde una ventana de terminal.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pcmanfm.png
	lyxscale 40
	scale 34

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

PCManFM
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename explorador.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faWindows 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Explorador de archivos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la barra de dirección del administrador de archivos, podemos observar
 en que posición de la estructura de directorios nos encontramos en este
 momento.
 Esa misma información podemos obtenerla en una terminal con el siguiente
 comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

pwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

pwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset

 recibe su nombre de las siglas en ingles 
\begin_inset Quotes fld
\end_inset


\emph on
Print Working Directory
\emph default

\begin_inset Quotes frd
\end_inset

 (mostrar directorio de trabajo).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El administrador de archivos nos muestra también en su ventana el contenido
 del directorio de trabajo actual.
 Para lograr lo mismo desde la consola escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para cambiar la carpeta en la que estamos desde el entorno gráfico simplemente
 hacemos doble click en la carpeta que pretendemos.
 Para cambiar de carpeta desde una terminal disponemos del siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cd carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

cd carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el entorno gráfico para acceder al directorio padre del directorio actual
 hacemos click en la flecha hacia arriba.
 El comando para lograr lo mismo es:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cd ..
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

cd ..
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si queremos observar el árbol de directorios desde la posición actual, podemos
 escribir lo siguiente en la consola:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

tree
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

tree
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Existen dos tipos de rutas que se utilizan para referirse a la ubicación
 de un archivo o directorio en un sistema de archivos: rutas absolutas y
 rutas relativas.
\end_layout

\begin_layout Description
Ruta
\begin_inset space ~
\end_inset

absoluta Una ruta absoluta es una ruta que especifica la ubicación completa
 de un archivo o directorio, desde el directorio raíz hasta el archivo o
 directorio en cuestión.
 En otras palabras, una ruta absoluta es la ruta completa que describe la
 ubicación exacta de un archivo o directorio, independientemente de la ubicación
 del usuario o del directorio de trabajo actual.
 
\end_layout

\begin_layout Description
Ruta
\begin_inset space ~
\end_inset

relativa Una ruta relativa es una ruta que describe la ubicación de un archivo
 o directorio en relación con el directorio de trabajo actual.
 En otras palabras, una ruta relativa es una ruta que se especifica desde
 el directorio actual hasta el archivo o directorio en cuestión.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás haya que agregar ejemplos de ambas rutas.
\end_layout

\end_inset


\end_layout

\begin_layout Section
El sistema de archivos de Linux
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Hay que aclarar que Linux distingue entre mayúsculas y minúsculas.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Esquema de particionado
\end_layout

\begin_layout Standard
Linux puede instalarse en una variedad de esquemas de particionado, pero
 uno de los más comunes es el esquema de particionado convencional, que
 utiliza tres particiones para el sistema:
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
Una partición en donde se instala el gestor de arranque y el núcleo del
 sistema operativo.
\end_layout

\begin_layout Itemize
Una partición destinada a almacenar los programas de usuario y documentos.
\end_layout

\begin_layout Itemize
Una partición de intercambio, reservada para ser utilizada cuando la memoria
 RAM se agota.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gparted.png
	lyxscale 30
	scale 23

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

GParted
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nomenclatura de dispositivos
\end_layout

\begin_layout Standard
En Linux, los discos duros y particiones se nombran usando un esquema de
 nomenclatura estandarizado.
 Cada dispositivo se identifica por un nombre que se genera automáticamente
 y que puede estar compuesto de diferentes elementos.
\end_layout

\begin_layout Standard
El nombre asignado a un dispositivo de almacenamiento consta de tres partes:
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
Una sigla identificadora del tipo de dispositivo.
 En general, los discos rígidos, unidades de estado sólido y dispositivos
 USB empiezan con las letras 
\begin_inset Quotes fld
\end_inset


\emph on
sd
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Una letra secuencial que identifica el dispositivo en relación con otros
 dispositivos del mismo tipo.
 El primer dispositivo se denominará 
\begin_inset Quotes fld
\end_inset


\emph on
sda
\emph default

\begin_inset Quotes frd
\end_inset

, el segundo 
\begin_inset Quotes fld
\end_inset


\emph on
sdb
\emph default

\begin_inset Quotes frd
\end_inset

 y así sucesivamente.
\end_layout

\begin_layout Itemize
Un número adicional que indica la partición específica del dispositivo.
 La primera partición en el primer dispositivo será 
\begin_inset Quotes fld
\end_inset


\emph on
sda1
\emph default

\begin_inset Quotes frd
\end_inset

, la segunda será 
\begin_inset Quotes fld
\end_inset


\emph on
sda2
\emph default

\begin_inset Quotes frd
\end_inset

, y así sucesivamente.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es muy importante notar que la denominación 
\begin_inset Quotes fld
\end_inset


\family typewriter
sda
\family default

\begin_inset Quotes frd
\end_inset

 hace referencia a todo el dispositivo, mientras que 
\begin_inset Quotes fld
\end_inset


\family typewriter
sda1
\family default

\begin_inset Quotes frd
\end_inset

 solo hace referencia a la primer partición del primer dispositivo.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Jerarquía de archivos
\end_layout

\begin_layout Standard
La jerarquía de archivos en el sistema de archivos se organiza en un árbol
 con una estructura específica.
 El objetivo de una estructura estandarizada es que los desarrolladores
 de software y los administradores de sistemas puedan predecir con precisión
 dónde se encuentran los archivos importantes del sistema y cómo acceder
 a ellos.
\end_layout

\begin_layout Standard
A continuación, se presentan algunos de los directorios más importantes
 de la jerarquía de archivos:
\end_layout

\begin_layout Description
/ Es la raíz del sistema de archivos.
 Cualquier otro directorio debe encontrarse dentro de el, independientemente
 de en cual dispositivo se encuentre.
\end_layout

\begin_layout Description
/bin Este directorio contiene los archivos binarios esenciales del sistema,
 como comandos básicos de GNU/Linux.
\end_layout

\begin_layout Description
/boot Contiene los archivos necesarios para el proceso de arranque del sistema,
 como el gestor de arranque o el núcleo.
\end_layout

\begin_layout Description
/dev En Linux, los dispositivos del hardware se representan como archivos
 especiales.
 En esta carpeta se encuentran esos archivos.
\end_layout

\begin_layout Description
/etc Este directorio contiene los archivos de configuración del sistema
 y de las aplicaciones instaladas en el mismo.
\end_layout

\begin_layout Description
/home Este directorio se utiliza para almacenar los directorios personales
 de los usuarios.
\end_layout

\begin_layout Description
/lib Contiene las bibliotecas compartidas necesarias para el funcionamiento
 del sistema.
\end_layout

\begin_layout Description
/mnt Este directorio se utiliza para montar sistemas de archivos externos,
 como unidades flash USB, discos duros externos, etc.
 En algunas distribuciones esto también se hace en el directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/media
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Description
/proc El directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/proc
\family default

\begin_inset Quotes frd
\end_inset

 es un directorio virtual que contiene información sobre el sistema y los
 procesos en ejecución.
 Es generado en tiempo real por el kernel del sistema operativo.
\end_layout

\begin_layout Description
/root Este directorio es el directorio personal del usuario 
\begin_inset Quotes fld
\end_inset


\emph on
root
\emph default

\begin_inset Quotes frd
\end_inset

.
 El usuario 
\emph on
root
\emph default
 es el único que tiene acceso completo al sistema.
\end_layout

\begin_layout Description
/sbin Contiene los archivos binarios esenciales del sistema, utilizados
 principalmente para la administración del sistema.
\end_layout

\begin_layout Description
/tmp Este directorio se utiliza para almacenar archivos temporales creados
 por el sistema y los usuarios.
\end_layout

\begin_layout Description
/usr Contiene la mayoría de las utilidades y aplicaciones multiusuario,
 es decir, accesibles para todos los usuarios.
 En otras palabras, contiene los archivos compartidos, pero que no obstante
 son de sólo lectura.
\end_layout

\begin_layout Description
/var Este directorio contiene archivos que cambian frecuentemente durante
 la operación del sistema, como archivos de registro y archivos de bases
 de datos.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename fhs.png
	lyxscale 25
	scale 11

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Jerarquía de directorios estándar en Linux.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Carpetas especiales
\end_layout

\begin_layout Standard
Existen tres carpetas especiales en los sistemas Linux:
\end_layout

\begin_layout Itemize
El punto (
\family typewriter
.
\family default
) es una carpeta especial que representa el directorio actual en el que
 se encuentra el usuario.
 Por ejemplo, si el usuario se encuentra en el directorio 
\family typewriter
/home/user
\family default
, entonces el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls .
\family default

\begin_inset Quotes frd
\end_inset

 mostrará el contenido del directorio actual, es decir, 
\family typewriter
/home/user
\family default
.
\end_layout

\begin_layout Itemize
Los dos puntos (
\family typewriter
..
\family default
) representan el directorio padre del directorio actual.
 Por ejemplo, si el usuario se encuentra en el directorio 
\family typewriter
/home/user
\family default
, el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls ..
\family default

\begin_inset Quotes frd
\end_inset

 mostrará el contenido del directorio padre, es decir, 
\family typewriter
/home
\family default
.
\end_layout

\begin_layout Itemize
El símbolo de tilde (
\family typewriter
~
\family default
) representa el directorio principal del usuario.
 Por ejemplo, si el usuario es 
\begin_inset Quotes fld
\end_inset


\family typewriter
user
\family default

\begin_inset Quotes frd
\end_inset

, entonces el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd ~
\family default

\begin_inset Quotes frd
\end_inset

 lo llevará al directorio 
\family typewriter
/home/user
\family default
.
\end_layout

\begin_layout Subsection
Montaje
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\emph on
Montar
\emph default

\begin_inset Quotes frd
\end_inset

 significa hacer que un sistema de archivos esté disponible en un punto
 de montaje especificado en el sistema de archivos raíz.
 En otras palabras, montar un sistema de archivos implica hacer que el sistema
 operativo sea consciente de la existencia de un sistema de archivos y asignarlo
 a un directorio específico en la jerarquía de archivos del sistema.
 Cuando se monta un sistema de archivos, el sistema operativo lo asigna
 a un punto de montaje específico en la jerarquía de archivos.
 El punto de montaje es un directorio en el sistema de archivos raíz, que
 se utiliza para acceder al contenido del sistema de archivos que se va
 a montar.
 Una vez montado, el contenido del sistema de archivos se vuelve accesible
 en el punto de montaje especificado.
\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
NAME
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

MAJ:MIN RM
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

SIZE
\begin_inset space ~
\end_inset

RO TYPE MOUNTPOINTS
\end_layout

\begin_layout Plain Layout

\family typewriter
sda
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8:0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

10G
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 disk
\end_layout

\begin_layout Plain Layout

\family typewriter
├─sda1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8:1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

100M
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 part /boot
\end_layout

\begin_layout Plain Layout

\family typewriter
└─sda2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8:2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

9,9G
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 part /
\end_layout

\begin_layout Plain Layout

\family typewriter
sdb
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8:16
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

7,5G
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 disk
\end_layout

\begin_layout Plain Layout

\family typewriter
├─sdb1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8:17
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

7,4G
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 part /mnt
\end_layout

\begin_layout Plain Layout

\family typewriter
└─sdb4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8:20
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2,4G
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 part
\end_layout

\begin_layout Plain Layout

\family typewriter
sr0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

11:0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset

810,3M
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 rom
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para montar un sistema de archivos en Linux.
 El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 requiere varios parámetros, incluyendo la ubicación del dispositivo de
 almacenamiento y el punto de montaje.
 Por ejemplo, para montar un dispositivo de almacenamiento USB en el punto
 de montaje 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

, el siguiente comando puede ser utilizado:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo mount /dev/sdb1 /mnt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El uso del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 en el principio del comando indica que se necesita permisos de administrador
 para montar el dispositivo de almacenamiento.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para desmontar un sistema de archivos, se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

.
 El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para desmontar un sistema de archivos que se encuentra actualmente
 en uso y liberar el punto de montaje.
 Por ejemplo, para desmontar el dispositivo de almacenamiento USB montado
 anteriormente podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo umount /mnt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Enlaces
\end_layout

\begin_layout Standard
En Linux, existen dos tipos de enlaces para archivos: enlaces suaves (también
 conocidos como enlaces simbólicos o 
\begin_inset Quotes fld
\end_inset


\emph on
soft links
\emph default

\begin_inset Quotes frd
\end_inset

) y enlaces duros (también conocidos como enlaces físicos o 
\begin_inset Quotes fld
\end_inset


\emph on
hard links
\emph default

\begin_inset Quotes frd
\end_inset

).
\end_layout

\begin_layout Standard
Un enlace suave es un archivo especial que apunta a otro archivo en el sistema
 de archivos.
 El enlace suave no contiene los datos del archivo al que apunta, sino simplemen
te la ruta del archivo.
 Si se elimina el archivo original, el enlace suave se vuelve inútil.
 Los enlaces suaves se utilizan comúnmente para hacer referencia a archivos
 en diferentes ubicaciones y para crear accesos directos en el sistema de
 archivos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los enlaces suaves de Linux son equivalentes a los 
\begin_inset Quotes fld
\end_inset


\emph on
accesos directos
\emph default

\begin_inset Quotes frd
\end_inset

 en los sistemas Windows.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para crear un enlace suave en Linux, se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

.
 El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 crea un enlace entre dos archivos y la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

 indica que se creará un enlace suave.
 Por ejemplo, para crear un enlace suave llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
enlace
\family default

\begin_inset Quotes frd
\end_inset

 que apunte al archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

, se puede usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ln -s archivo enlace
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un enlace duro es una entrada de directorio adicional que apunta al mismo
 archivo en el sistema de archivos.
 A diferencia de los enlaces suaves, los enlaces duros no son archivos independi
entes y no pueden apuntar a archivos en diferentes sistemas de archivos
 o particiones.
 Si se elimina el archivo original, el enlace duro sigue siendo válido y
 no se elimina hasta que todos los enlaces se eliminan.
\end_layout

\begin_layout Standard
Para crear un enlace duro en Linux, se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 sin la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

.
 Por ejemplo, para crear un enlace duro llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
enlace
\family default

\begin_inset Quotes frd
\end_inset

 que apunte al archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

, se puede usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ln archivo enlace
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Introduccion
\begin_inset Quotes fld
\end_inset


\emph on
Pensar no garantiza que no cometeremos errores.
 Pero no pensar garantiza que lo haremos
\emph default

\begin_inset Quotes frd
\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\begin_inset Newline newline
\end_inset

Leslie Lamport
\end_layout

\begin_layout Part
Manejo de bash
\end_layout

\begin_layout Chapter
Comandos básicos
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
Bash es un interprete de linea de comandos y un lenguaje de programación
 de scripting utilizado principalmente en sistemas operativos tipo Unix.
 Es el intérprete de comandos por defecto en la mayoría de las distribuciones
 de Linux.
\end_layout

\begin_layout Standard
Permite a los usuarios interactuar con el sistema operativo mediante la
 entrada de comandos en un emulador de terminal.
 Con Bash, los usuarios pueden ejecutar programas, gestionar archivos y
 directorios, automatizar tareas y realizar una amplia variedad de operaciones
 de administración del sistema.
\end_layout

\begin_layout Standard
Además, también es un lenguaje de scripting que permite a los usuarios escribir
 programas para automatizar tareas repetitivas o complejas.
 Estos scripts pueden incluir una serie de comandos de Bash y se pueden
 ejecutar en una terminal o programarse para que se ejecuten automáticamente
 en momentos específicos.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar información sobre el prompts.
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Sintaxis
\end_layout

\begin_layout Standard
La sintaxis
\begin_inset Marginal
status open

\begin_layout Plain Layout
Es importante seguir la sintaxis correcta de un comando, ya que de lo contrario,
 el comando puede no funcionar como se espera o puede producir errores.
\end_layout

\end_inset

 de un comando es la estructura y el formato que se deben seguir para escribir
 y ejecutar correctamente un comando en un sistema operativo.
 La sintaxis incluye el nombre del comando, las 
 es y los argumentos
 necesarios, así como la forma en que deben escribirse y ordenarse.
\end_layout

\begin_layout Standard
Cada comando tiene su propia sintaxis única, pero en general, la mayoría
 sigue una estructura básica:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando [opciones] [argumentos]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
El comando es el nombre del programa o acción que se desea ejecutar.
\end_layout

\begin_layout Itemize
Las opciones son indicadores adicionales que se agregan al comando para
 modificar su comportamiento.
 Las opciones generalmente se escriben después del comando y comienzan con
 un guion (
\family typewriter
-
\family default
) o dos guiones (
\family typewriter
--
\family default
).
\end_layout

\begin_layout Itemize
Los argumentos son valores adicionales que se pasan al comando para que
 actúe sobre ellos.
 Los argumentos generalmente se escriben después de las opciones y pueden
 ser nombres de archivo, rutas de directorio, nombres de usuario, números,
 etc.
\end_layout

\begin_layout Itemize
La mayoría de los comandos admiten la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
–-help
\family default

\begin_inset Quotes frd
\end_inset

 para consultar su ayuda.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En la sintaxis de un comando, los corchetes se utilizan para indicar que
 un elemento es opcional.
 Esto significa que puede omitirse o incluirse según sea necesario.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar información sobre copiar y pegar.
 También explicar el uso de 
\begin_inset Quotes fld
\end_inset


\backslash

\begin_inset Quotes frd
\end_inset

 para comandos largos.
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Historial
\end_layout

\begin_layout Standard
Cada vez que se escribe y ejecuta un comando en Bash, se agrega al historial
 de comandos.
 Esto permite acceder a los comandos previamente ejecutados para volver
 a ejecutarlos o modificarlos en lugar de volver a escribirlos desde cero.
 Para poder acceder fácilmente al historial, se pueden presionar las siguientes
 teclas:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Flecha hacia arriba: Muestra el comando anterior en el historial.
 Si se sigue presionando, se mostrarán comandos anteriores en el historial
 en orden cronológico inverso.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Flecha hacia abajo: Análogo pero en orden cronológico.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+R: Abre una búsqueda reversa en el historial de comandos.
 Al escribir una palabra clave o frase, se mostrarán los comandos anteriores
 que coinciden con la búsqueda.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar información sobre !! y !n.
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Autocompletado
\end_layout

\begin_layout Standard
Cuando se escribe un comando o una ruta en el terminal y se presiona la
 tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Tab, Bash intenta completar automáticamente el comando o la ruta.
 Si hay una sola opción disponible, Bash la completará automáticamente.
 Si hay varias opciones disponibles, Bash mostrará una lista de opciones
 que coinciden con lo que se ha escrito hasta el momento.
 Si se sigue presionando la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Tab, Bash continuará mostrando opciones adicionales.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
man
\end_layout

\begin_layout Standard
El comando 
\family typewriter
man
\family default

\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset

manual
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es una herramienta de línea de comandos que proporciona información detallada
 sobre otros comandos, funciones y bibliotecas.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

man [opciones] comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las opciones más comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

 para buscar descripciones cortas de comandos relacionados con una palabra
 clave.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-k
\family default

\begin_inset Quotes frd
\end_inset

 para buscar páginas del manual que contienen una palabra clave específica.
\end_layout

\begin_layout Standard
Para navegar dentro del programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

, se pueden usar varias teclas moverse por la página, buscar texto y salir
 del programa:
\end_layout

\begin_layout Itemize
Las teclas de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

flecha arriba y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

abajo: se pueden utilizar para desplazarse hacia arriba y hacia abajo por
 la página del manual.
\end_layout

\begin_layout Itemize
La tecla 
\begin_inset Quotes fld
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset


\family typewriter
/
\family default

\begin_inset Quotes frd
\end_inset

 seguida de un texto de búsqueda: se puede utilizar para buscar una palabra
 o frase en la página del manual actual.
\end_layout

\begin_layout Itemize
La tecla 
\begin_inset Quotes fld
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset


\family typewriter
q
\family default

\begin_inset Quotes frd
\end_inset

: se puede utilizar para salir del programa 
\family typewriter
man
\family default
 y volver al terminal.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las páginas del manual también pueden consultarse en internet: 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://man.cx/"
literal "true"

\end_inset

 Linux Manpages Online
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para poder observar la documentación del comando 
\family typewriter
man
\family default
 podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

man man
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos consultar cuales comandos sirven para 
\begin_inset Quotes fld
\end_inset

listar directorios
\begin_inset Quotes frd
\end_inset

 con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

man -k 
\begin_inset Quotes fld
\end_inset

list directory
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
dir (1)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- list directory contents
\end_layout

\begin_layout Plain Layout

\family typewriter
ls (1)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- list directory contents
\end_layout

\begin_layout Plain Layout

\family typewriter
ls (1p)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- list directory contents
\end_layout

\begin_layout Plain Layout

\family typewriter
vdir (1) - list directory contents
\end_layout

\end_inset


\end_layout

\begin_layout Example
La descripción corta del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
clear
\family default

\begin_inset Quotes frd
\end_inset

 la podemos observar con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

man -f clear
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
clear (1)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- clear the terminal screen
\end_layout

\begin_layout Plain Layout

\family typewriter
clear (3x) - clear all or part of a curses window
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
clear
\end_layout

\begin_layout Standard
El comando 
\family typewriter
clear
\family default
 es un comando que se utiliza para limpiar la pantalla del terminal, eliminando
 todos los comandos y resultados previos que se hayan mostrado.
 Al ejecutar este comando, la pantalla del terminal se restablecerá, dejando
 la línea de comando en la parte superior de la pantalla.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\family typewriter
clear
\family default
 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

clear [-x]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-x
\family default

\begin_inset Quotes frd
\end_inset

 puede agregarse para evitar que se borre el historial desplazamiento del
 emulador de terminal.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El atajo de teclado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+L es equivalente al comando 
\family typewriter
clear
\family default
.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para borrar el contenido de la pantalla se utiliza el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

clear
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

clear
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
echo
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás se pueda mover este comando a la parte de redirección.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\family typewriter
echo
\family default
 es un comando de la línea de comandos que se utiliza para imprimir texto
 en la pantalla del terminal.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\family typewriter
echo
\family default
 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

echo [opciones] texto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\family typewriter
echo
\family default
 también admite varias opciones y parámetros adicionales, que permiten ajustar
 el formato de la salida y realizar otras tareas:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

: evita que el comando agregue un carácter de nueva línea al final de la
 salida.
 En otras palabras, la siguiente línea del terminal comenzará en la misma
 línea en la que termina la salida del comando 
\family typewriter
echo
\family default
.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-e
\family default

\begin_inset Quotes frd
\end_inset

: activa el soporte de secuencias de escape en la salida.
 Por ejemplo, se pueden utilizar secuencias de escape para agregar saltos
 de linea al texto.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La utilidad del comando 
\family typewriter
echo
\family default
 resultara mas evidente una vez que se estudien las redirecciones y los
 scripts.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para escribir dos palabras separadas por una linea se escribe el siguiente
 comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo -e 
\begin_inset Quotes fld
\end_inset

Hola
\backslash
nmundo!
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

echo Hola mundo!
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
history
\end_layout

\begin_layout Standard
El comando 
\family typewriter
history
\family default
 muestra una lista de los comandos que se han ejecutado anteriormente.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
history
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

history [-c]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

 para borrar el historial.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\family typewriter
history
\family default
 no es un programa de usuario, sino una funcionalidad que provee Bash.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver los últimos comandos ingresados se usa el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

history
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
1 cd ~
\end_layout

\begin_layout Plain Layout

\family typewriter
2 ls
\end_layout

\begin_layout Plain Layout

\family typewriter
3 history
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

history
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar el propósito y funcionamiento de los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
date
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
cal
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe cada uno de ellos.
\end_layout

\begin_layout Section
Sistema de archivos
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
pwd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset

 son las siglas de 
\begin_inset Quotes fld
\end_inset


\emph on
Print Working Directory
\emph default

\begin_inset Quotes frd
\end_inset

 (
\begin_inset Quotes fld
\end_inset

mostrar directorio de trabajo
\begin_inset Quotes frd
\end_inset

).
\end_layout

\end_inset

 muestra la ruta completa del directorio de trabajo actual en el sistema
 de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

pwd [-P]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-P
\family default

\begin_inset Quotes frd
\end_inset

 para mostrar el directorio sin enlaces simbólicos.
\end_layout

\begin_layout Example
Para mostrar la ruta del directorio de trabajo actual usamos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

pwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
/home/entorno
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

pwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 son las iniciales de 
\begin_inset Quotes fld
\end_inset

cambiar directorio
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para cambiar el directorio de trabajo actual en el sistema de
 archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cd [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Si no se especifica una ruta, el comando es equivalente a 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd ~
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Si se utiliza el argumento 
\begin_inset Quotes fld
\end_inset


\family typewriter
-
\family default

\begin_inset Quotes frd
\end_inset

, el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 vuelve al directorio de trabajo anterior.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
A diferencia de los programas anteriores, 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 es un comando interno del shell.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás se puede enseñar a usar 
\begin_inset Quotes fld
\end_inset

pushd
\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset

popd
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ir al directorio que contiene la carpeta personal del usuario actual
 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cd ~/..
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

cd ~/..
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ls
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

listar
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para listar los archivos y directorios en el directorio de trabajo
 actual o en una ubicación específica del sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 es simplemente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

ls [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se omite la ruta, se asume que se desea listar los archivos y directorios
 en el directorio de trabajo actual.
 Además, se pueden utilizar opciones para personalizar la salida del comando
 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

.
 Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

: muestra la lista en formato largo, que incluye información detallada sobre
 cada archivo o directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-h
\family default

\begin_inset Quotes frd
\end_inset

: muestra el tamaño de los archivos en formato legible por humanos, como
 
\begin_inset Quotes fld
\end_inset


\emph on
KB
\emph default

\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset


\emph on
MB
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

: muestra todos los archivos y directorios, incluyendo los que comienzan
 con un punto.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En el sistema de archivos de Linux, los archivos que comienzan con un punto
 se consideran archivos ocultos.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar el contenido del directorio actual usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
dsh dsh.c entornos final hola.c hola.py hola.s
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Si además queremos ver información adicional, agregamos la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Example
\begin_inset Note Note
status open

\begin_layout Plain Layout
Explicar la salida de la opción 
\begin_inset Quotes fld
\end_inset

-l
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls -l
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
-rwxr-xr-x 1 damian wheel 15832 abr 12 19:33 dsh
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel
\begin_inset space ~
\end_inset

 1130 abr 12 19:32 dsh.c
\end_layout

\begin_layout Plain Layout

\family typewriter
drwxr-xr-x 6 damian wheel 
\begin_inset space ~
\end_inset

4096 abr 17 13:54 entornos
\end_layout

\begin_layout Plain Layout

\family typewriter
drwxr-xr-x 4 damian wheel 
\begin_inset space ~
\end_inset

4096 abr 19 01:03 final
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

60 mar 20 15:05 hola.c
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

35 mar 28 19:06 hola.py
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

462 mar 28 19:40 hola.s
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar el contenido del directorio raíz podemos usar el siguiente
 comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls /
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
bin boot dev etc home lib lib64 lost+found mnt opt proc root run sbin srv
 sys tmp usr var
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

ls /
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
mkdir
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 significa 
\begin_inset Quotes fld
\end_inset


\emph on
make directory
\emph default

\begin_inset Quotes frd
\end_inset

 (o 
\begin_inset Quotes fld
\end_inset

crear directorio
\begin_inset Quotes frd
\end_inset

 en español).
\end_layout

\end_inset

 se utiliza para crear nuevos directorios en el sistema de archivos.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

mkdir [opciones] directorio...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Quotes fld
\end_inset

opciones
\begin_inset Quotes frd
\end_inset

 son las opciones que se pueden utilizar para personalizar la creación del
 directorio y 
\begin_inset Quotes fld
\end_inset

directorio
\begin_inset Quotes frd
\end_inset

 es el nombre del directorio que se desea crear.
\end_layout

\begin_layout Standard
Algunas de las opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-p
\family default

\begin_inset Quotes frd
\end_inset

: crea todos los directorios en la ruta especificada, incluso si no existen.
 Si ya existe un directorio con el mismo nombre que uno de los directorios
 de la ruta, se ignora sin dar errores.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

: muestra los detalles de la creación del directorio en la salida estándar
 de la terminal.
\end_layout

\begin_layout Example
Para crear un directorio llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta
\family default

\begin_inset Quotes frd
\end_inset

 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear un directorio llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta1
\family default

\begin_inset Quotes frd
\end_inset

 y otro llamdo 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta2
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar este comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta1 carpeta2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear un directorio llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta1
\family default

\begin_inset Quotes frd
\end_inset

 con una carpeta 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta2
\family default

\begin_inset Quotes frd
\end_inset

 adentro, usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir -p carpeta1/carpeta2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta1/carpeta2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
rmdir
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 es la abreviación de 
\begin_inset Quotes fld
\end_inset

remover directorio
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es utilizado para eliminar directorios 
\emph on
vacíos
\emph default
 en el sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

rmdir [opciones] directorio...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-p
\family default

\begin_inset Quotes frd
\end_inset

: dada una ruta, elimina un directorio y sus predecesores.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

: muestra los detalles de la eliminación del directorio en la salida estándar
 de la terminal.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante tener en cuenta que solo se pueden eliminar directorios vacíos
 con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
touch
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para crear archivos vacíos o actualizar la fecha y hora de acceso
 o modificación de un archivo.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

touch [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

: actualiza sólo la fecha y hora de acceso del archivo.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

: actualiza sólo la fecha y hora de modificación del archivo.
\end_layout

\begin_layout Standard
Si se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 para crear un archivo que no existe, se crea un archivo vacío con el nombre
 especificado.
 Si en cambio se utiliza con un archivo existente, se actualiza la fecha
 y hora de acceso y/o modificación del archivo sin cambiar su contenido.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 es útil en situaciones en las que se necesita establecer manualmente la
 fecha y hora de acceso o modificación de un archivo, o para crear rápidamente
 un archivo vacío sin tener que abrir un editor de texto y guardar un archivo
 vacío.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
rm
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 es la abreviación de 
\begin_inset Quotes fld
\end_inset

remover
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es utilizado para eliminar archivos y directorios en el sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

rm [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

: se utiliza para eliminar directorios y su contenido de forma recursiva.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

: se utiliza para forzar la eliminación de un archivo si este está protegido
 contra escritura.
 Además no da error si los archivos no existen.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-
\family default
i
\begin_inset Quotes frd
\end_inset

: pide una confirmación antes de borrar cada archivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

 para eliminar un archivo, el archivo se eliminará de forma permanente del
 sistema de archivos; no se mueve a una papelera de reciclaje.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para borrar tres archivos pidiendo confirmación podemos usar el siguiente
 comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm -i archivo1 archivo2 archivo3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
rm: ¿borrar el fichero regular vacío 'archivo1'? (s/n) s
\end_layout

\begin_layout Plain Layout

\family typewriter
rm: ¿borrar el fichero regular vacío 'archivo2'? (s/n) s
\end_layout

\begin_layout Plain Layout

\family typewriter
rm: ¿borrar el fichero regular vacío 'archivo3'? (s/n) s
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para borrar un directorio no vacío junto con todo su contenido usamos el
 siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm -r directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

rm -r directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cp
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

copiar
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 que se utiliza para copiar uno o más archivos o directorios de una ubicación
 a otra en el sistema de archivos.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cp [opciones] origen destino
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante tener en cuenta que si se copia un archivo a un directorio
 que ya contiene un archivo con el mismo nombre, el archivo existente se
 sobrescribirá automáticamente sin pedir confirmación.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

: indica que se deben copiar los directorios y su contenido de forma recursiva.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

: muestra los detalles de la copia en la salida estándar de la terminal.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-i
\family default

\begin_inset Quotes frd
\end_inset

: pide confirmación antes de sobrescribir archivos existentes.
\end_layout

\begin_layout Example
Para copiar un archivo a otro directorio usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cp archivo directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

cp archivo directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear una copia de un archivo en el directorio actual podemos usar
 el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cp archivo copia
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

cp archivo copia
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para copiar un directorio y su contenido a otro directorio:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cp -r directorio1 directorio2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

cp -r directorio1 directorio2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
mv
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset

mover
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para mover o renombrar archivos o directorios.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

mv [opciones] origen destino
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset

 también ofrece algunas opciones útiles, entre las que se incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-i
\family default

\begin_inset Quotes frd
\end_inset

: Solicita confirmación antes de sobrescribir archivos existentes.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

: Sobrescribe archivos existentes sin preguntar.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

: Muestra información detallada sobre lo que se está haciendo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si 
\family typewriter
origen
\family default
 y 
\family typewriter
destino
\family default
 se encuentran dentro de la misma ruta, entonces el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset

 cambia el nombre del archivo o directorio.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
df
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset

df
\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
df
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de "
\emph on
Disk Free
\emph default
" (disco libre en inglés)
\end_layout

\end_inset

 sirve para mostrar información sobre el espacio libre y utilizado en sistemas
 de archivos montados.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

df [opciones] [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
df
\family default

\begin_inset Quotes frd
\end_inset

 también ofrece algunas opciones útiles, entre las que se incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-h
\family default

\begin_inset Quotes frd
\end_inset

: Muestra los tamaños de bloque en un formato legible por humanos (por ejemplo,
 en 
\emph on
kilobytes
\emph default
, 
\emph on
megabytes
\emph default
, 
\emph on
gigabytes
\emph default
, etc.).
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-T
\family default

\begin_inset Quotes frd
\end_inset

: Muestra el tipo de sistema de archivos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto, si se ejecuta sin opciones, 
\begin_inset Quotes fld
\end_inset


\family typewriter
df
\family default

\begin_inset Quotes frd
\end_inset

 muestra información sobre todos los sistemas de archivos montados en el
 sistema, incluyendo el espacio total, el espacio utilizado, el espacio
 libre y el porcentaje de uso.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver el tipo de sistema de archivos y espacio libre en forma legible,
 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

df -Th
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
S.ficheros Tipo 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Tamaño Usados Disp Uso% Montado en
\end_layout

\begin_layout Plain Layout

\family typewriter
dev
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

devtmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

971M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 971M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0% /dev
\end_layout

\begin_layout Plain Layout

\family typewriter
run
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

644K 978M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1% /run
\end_layout

\begin_layout Plain Layout

\family typewriter
/dev/sda2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

ext4 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

9,7G 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

7,1G 2,1G 
\begin_inset space ~
\end_inset

78% /
\end_layout

\begin_layout Plain Layout

\family typewriter
tmpfs
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0% /dev/shm
\end_layout

\begin_layout Plain Layout

\family typewriter
tmpfs
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

72M 907M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8% /tmp
\end_layout

\begin_layout Plain Layout

\family typewriter
/dev/sda1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

vfat 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

100M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

97M 2,9M 
\begin_inset space ~
\end_inset

98% /boot
\end_layout

\begin_layout Plain Layout

\family typewriter
tmpfs
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

196M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

16K 196M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1% /run/user/1000
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
du
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
du
\family default

\begin_inset Quotes frd
\end_inset

 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
du
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset


\emph on
Disk Usage
\emph default

\begin_inset Quotes frd
\end_inset

 (uso de disco en inglés)
\end_layout

\end_inset

 sirve para mostrar información sobre el espacio utilizado por directorios.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

du [opciones] [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones útiles son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-h
\family default

\begin_inset Quotes frd
\end_inset

: Muestra los tamaños de archivo en un formato legible por humanos.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

: Muestra sólo el tamaño total de la ruta especificada, sin detalles de
 tamaño por directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

: Muestra información de tamaño también para los archivos, no sólo para
 los directorios.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto, si se ejecuta sin opciones, 
\begin_inset Quotes fld
\end_inset


\family typewriter
du
\family default

\begin_inset Quotes frd
\end_inset

 muestra la cantidad de espacio utilizado por cada directorio en la ruta
 actual.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para mostrar el uso del directorio actual usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

du
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi1/cuartos1
\end_layout

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi1/cuartos2
\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space ~
\end_inset

./semi1
\end_layout

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi2/cuartos4
\end_layout

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi2/cuartos3
\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space ~
\end_inset

./semi2
\end_layout

\begin_layout Plain Layout

\family typewriter
28
\begin_inset space ~
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ln
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza en sistemas Linux para crear enlaces simbólicos o enlaces duros
 a archivos y directorios.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

ln [-s] [archivo original] [nombre del enlace]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 crea enlaces duros, a no ser que se utilice la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
mount
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza en sistemas operativos tipo Linux para montar sistemas de archivos
 en un directorio del sistema de archivos.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

mount [-r] dispositivo directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 monta los sistemas de archivos en modo de lectura y escritura, a no ser
 que se use la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

 (sólo lectura).
\end_layout

\begin_layout Plain Layout
También es importante destacar que para montar un sistema de archivos, normalmen
te se necesitan privilegios de superusuario, por lo que se debe utilizar
 el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 para ejecutar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Si se desea montar la partición 
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/sda1
\family default

\begin_inset Quotes frd
\end_inset

 en el directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

, se puede utilizar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo mount /dev/sda1 /mnt 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una vez que se ha montado la partición, cualquier archivo que se encuentre
 en la partición estará disponible en el directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
umount
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para desmontar un sistema de archivos previamente montado en
 un directorio.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

umount [opciones] directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones útiles son las que siguen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

: Forzar el desmontaje, aunque la partición esté siendo utilizada por otros
 procesos.
 El sistema puede quedar inconsistente.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

: Desmonta la partición permitiendo que los procesos que utilizan la partición
 terminen antes de desmontarla.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante destacar que para desmontar un sistema de archivos, normalmente
 se necesitan privilegios de superusuario, por lo que se debe utilizar el
 comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 para ejecutar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Si se desea desmontar la partición que previamente se montó en el directorio
 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

, se puede utilizar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo umount /mnt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
find
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
find
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta muy útil para buscar archivos y directorios en el sistema
 de archivos.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

find [ruta inicial] [expresiones de busqueda]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las expresiones de búsqueda mas importantes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-type
\family default

\begin_inset Quotes frd
\end_inset

: Especifica el tipo de archivo que se está buscando.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-name
\family default

\begin_inset Quotes frd
\end_inset

: Especifica el nombre del archivo que se está buscando.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-empty
\family default

\begin_inset Quotes frd
\end_inset

: Busca archivos vacíos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si no se especifica una ruta de inicio, se buscará a partir del directorio
 de trabajo actual.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es posible ejecutar un comando para cada uno de los archivos o directorios
 encontrados.
 Para esto debemos agregar al final:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

find [ruta] [expresiones de busqueda] -exec comando {} 
\backslash
;
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Quotes fld
\end_inset


\family typewriter
{}
\family default

\begin_inset Quotes frd
\end_inset

 se reemplazará por los nombres de los archivos o directorios encontrados.
\end_layout

\begin_layout Example
Para buscar en el directorio de trabajo actual todos los 
\emph on
directorios
\emph default
 que existan se usa el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

find -type d
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
.
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos1
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos2
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos4
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos3
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para buscar en el directorio de trabajo actual todos los 
\emph on
archivos
\emph default
 que existan se usa el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

find -type f
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
./francia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/croacia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos1/holanda
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos1/argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos2/croacia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos2/brasil
\end_layout

\begin_layout Plain Layout

\family typewriter
./argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos4/marruecos
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos4/portugal
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/marruecos
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/francia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos3/inglaterra
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos3/francia
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Para actualizar la fecha de modificación y accesos de todos los archivos
 vacíos puede usarse el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

find -type f -empty -exec touch {} 
\backslash
;
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Comodines
\end_layout

\begin_layout Standard
Los comodines, también conocidos como wildcards en inglés, son caracteres
 especiales que se utilizan para representar patrones de búsqueda en 
\emph on
nombres de archivos y directorios
\emph default
.
\end_layout

\begin_layout Standard
Los comodines pueden ser muy útiles para simplificar tareas que involucran
 la manipulación de muchos archivos y directorios.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La expansión de comodines, es otra de las tareas que llevan a cabo los interpret
es de línea de comandos.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
*
\family default

\begin_inset Quotes frd
\end_inset

: Representa cualquier cadena de caracteres, incluyendo una vacía.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
?
\family default

\begin_inset Quotes frd
\end_inset

: Representa cualquier carácter individual.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
[]
\family default

\begin_inset Quotes frd
\end_inset

: Representa un conjunto de caracteres posibles.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
{}
\family default

\begin_inset Quotes frd
\end_inset

: Representa un producto cartesiano de caracteres.
 No se tienen en cuenta los archivos de la carpeta actual.
\end_layout

\begin_layout Example
Para borrar todos los archivos que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.txt
\family default

\begin_inset Quotes frd
\end_inset

 se puede usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm *.txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

rm *.txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar todos los programas de usuario que tienen 
\begin_inset Quotes fld
\end_inset


\family typewriter
64
\family default

\begin_inset Quotes frd
\end_inset

 en su nombre usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls /bin/*64*
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar las segundas particiones de todas las unidades de almacenamiento
 podemos usar:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls /dev/sd?2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver cuando ocupan los archivos que comienzan con dos letras y terminan
 con un número usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

du [a-z][a-z][0-9]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para borrar todos los archivos de una sola letra, que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.jpg
\family default

\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset


\family typewriter
.gif
\family default

\begin_inset Quotes frd
\end_inset

 escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm [a-z].{gif,jpg}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Investigue con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

, que otras opciones tiene el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe algunas de ellas.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Averigüe para que sirve el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
stat
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Considere la siguiente salida en pantalla del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls -log
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Exercise
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
total 4
\end_layout

\begin_layout Plain Layout

\family typewriter
drwxr-xr-x 2 4096 may 1 23:46 archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 may 1 23:46 carpeta
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
¿Por qué da error el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd carpeta
\family default

\begin_inset Quotes frd
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un directorio vacío con 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 y luego bórrelo con 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba la siguiente secuencia de comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta
\end_layout

\begin_layout Plain Layout

touch carpeta/archivo
\end_layout

\begin_layout Plain Layout

rmdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba la siguiente secuencia de comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch carpeta
\end_layout

\begin_layout Plain Layout

rmdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Exercise
Escriba el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta1/carpeta2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Exercise
Considere la siguiente salida en pantalla del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Exercise
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
rm: ¿borrar el fichero regular vacío 'archivo' protegido contra escritura?
 (s/n) s
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
¿Cuál fue el comando completo? ¿Cómo podría haberse omitido la comprobación
 de eliminación?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar sobre el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tree
\family default

\begin_inset Quotes frd
\end_inset

.
 Logre la siguiente salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tree
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
.
\end_layout

\begin_layout Plain Layout

\family typewriter
├── argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
├── francia
\end_layout

\begin_layout Plain Layout

\family typewriter
├── semi1
\end_layout

\begin_layout Plain Layout

\family typewriter
│   ├── argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
│   └── croacia
\end_layout

\begin_layout Plain Layout

\family typewriter
└── semi2
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

├── francia
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

└── marruecos
\end_layout

\begin_layout Plain Layout

\family typewriter
3 directories, 6 files
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree una copia idéntica a la estructura anterior en otro directorio.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Elimine ambas estructuras de directorios.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Investigue con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

, las opciones 
\begin_inset Quotes fld
\end_inset


\family typewriter
-b
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
-u
\family default

\begin_inset Quotes frd
\end_inset

 del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe ambas opciones.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para aprender sobre el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
readlink
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Inserte un 
\emph on
pendrive
\emph default
 en la computadora y utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
lsblk
\family default

\begin_inset Quotes frd
\end_inset

 para ver el nombre del dispositivo.
 Intente montarlo y desmontarlo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 y averigüe como buscar con 
\begin_inset Quotes fld
\end_inset


\family typewriter
find
\family default

\begin_inset Quotes frd
\end_inset

, los archivos modificados durante la última semana.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
find
\family default

\begin_inset Quotes frd
\end_inset

 para crear una copia de todos los directorios vacíos del directorio de
 trabajo actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Averigüe cuales son los programas de usuario instalados en su computadora,
 que solo tienen dos letras en su nombre.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo con el nombre de cada fecha del año.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba la siguiente secuencia de comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta
\end_layout

\begin_layout Plain Layout

touch carpeta/archivo1 carpeta/.archivo2
\end_layout

\begin_layout Plain Layout

rm -rf carpeta/*
\end_layout

\begin_layout Plain Layout

rmdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Exercise
Escriba un comando para mostrar los archivos ocultos de la carpeta actual.
\end_layout

\begin_layout Section
Contenido y filtros
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
nano
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

 es un editor de texto de la línea de comandos que se utiliza para crear
 y modificar archivos en sistemas Linux.
 Su sintaxis es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

nano [archivo]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un archivo, se comenzará un documento nuevo.
 Una vez que se encuentra en el editor, se puede usar el teclado para escribir
 o editar el archivo de texto.
\end_layout

\begin_layout Standard
Para utilizar el programa se pueden usar varias combinaciones de teclas
 que se señalan en la parte inferior de la pantalla.
 Algunas de ellas son:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+O: Para guardar los cambios en un archivo, se utiliza la combinación
 de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl + O, que guarda el archivo en su ubicación actual.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Shift+flechas: Se puede seleccionar texto manteniendo presionada la tecla
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Shift y presionando las flechas del teclado.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+K: Para cortar un texto seleccionado, se utiliza la combinación de
 teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+K.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+U: Para pegar un texto seleccionado, se utiliza la combinación de teclas
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+U.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Alt+U: Para deshacer la última acción, usamos la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Alt+U.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+X: Para salir del editor, se utiliza la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+X, lo que devuelve al usuario a la línea de comandos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al igual que 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 y al contrario que la mayoría de los comandos que veremos, 
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

 es un programa interactivo.
 Esto quiere decir que después de ingresar el comando, se ingresa a un programa
 que espera mas entrada desde el teclado.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cat
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset

cat
\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

con
\emph on
cat
\emph default
enar
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es una herramienta que se utiliza para concatenar y mostrar el contenido
 de uno o más archivos de texto.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset

 es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cat [-n] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

 para enumerar las líneas emitidas.
\end_layout

\begin_layout Example
Para conocer información sobre el CPU podemos observar el contenido del
 archivo especial 
\begin_inset Quotes fld
\end_inset


\family typewriter
/proc/cpuinfo
\family default

\begin_inset Quotes frd
\end_inset

 con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat /proc/cpuinfo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver información sobre la memoria podemos observar el contenido del
 archivo especial 
\begin_inset Quotes fld
\end_inset


\family typewriter
/proc/meminfo
\family default

\begin_inset Quotes frd
\end_inset

 con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat /proc/meminfo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar información sobre la línea de comando del kernel utilizada
 para iniciar el sistema operativo y a continuación la versión del mismo,
 podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat /proc/cmdline /proc/version
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
less
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
El nombre del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

 deriva de 
\begin_inset Quotes fld
\end_inset


\family typewriter
more
\family default

\begin_inset Quotes frd
\end_inset

 que fue el programa que se utilizaba anteriormente para este propósito
\end_layout

\end_inset

 es una utilidad en línea de comandos que se utiliza para ver el contenido
 de un archivo de texto de manera paginada.
 La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

less archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una vez que se ejecuta el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

, se abrirá una vista de página en la terminal que muestra el contenido
 del archivo.
 El programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

 se puede manejar igual que 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

 es otro de los programas interactivos que veremos, junto con 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver un registro de los últimos sucesos del sistema podemos paginar
 el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/var/log/syslog
\family default

\begin_inset Quotes frd
\end_inset

 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

less /var/log/syslog
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
head
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
head
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para mostrar las primeras líneas de un archivo de texto.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

head [-n X] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-n X
\family default

\begin_inset Quotes frd
\end_inset

 para mostrar las primeras 
\begin_inset Quotes fld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes frd
\end_inset

 lineas del archivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto, 
\begin_inset Quotes fld
\end_inset

head
\begin_inset Quotes frd
\end_inset

 muestra las primeras 10 líneas de un archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver las primeras cuatro lineas del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/fstab
\family default

\begin_inset Quotes frd
\end_inset

 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

head -n 4 /etc/fstab
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
# Static information about the filesystems.
\end_layout

\begin_layout Plain Layout

\family typewriter
# See fstab(5) for details.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
# <file system>
\begin_inset space ~
\end_inset

<dir>
\begin_inset space ~
\end_inset

<type>
\begin_inset space ~
\end_inset

<options>
\begin_inset space ~
\end_inset

<dump>
\begin_inset space ~
\end_inset

<pass>
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tail
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tail
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para mostrar las últimas líneas de un archivo de texto.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

tail [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n X
\family default

\begin_inset Quotes frd
\end_inset

: muestra las últimas 
\begin_inset Quotes fld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes frd
\end_inset

 líneas del archivo en lugar de las 10 últimas.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

: sigue en tiempo real los cambios que se realizan en el archivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

 puede ser especialmente útil para monitorear en tiempo real la actividad
 en un archivo que está siendo constantemente actualizado.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para monitorear los últimos sucesos del sistema podemos observar las últimas
 lineas del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/var/log/syslog
\family default

\begin_inset Quotes frd
\end_inset

 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

tail -f /var/log/syslog
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
sort
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sort
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para ordenar líneas de texto de un archivo
 de entrada.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

sort [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

: ordena las líneas en orden numérico en lugar de orden alfabético.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

: ordena las líneas en orden reverso (descendente).
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

: fusiona archivos previamente ordenados.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
-R
\family default
\size default

\begin_inset Quotes frd
\end_inset

: en vez de ordenar, mezcla el contenido.
\end_layout

\begin_layout Example
Para ordenar alfabéticamente los shells del sistema podemos usar el comando
 
\begin_inset Quotes fld
\end_inset


\family typewriter
sort
\family default

\begin_inset Quotes frd
\end_inset

 sobre el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/shells
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sort /etc/shells
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
# /etc/shells: valid login shells
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/bash
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/dash
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/rbash
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/sh
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/bash
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/dash
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/rbash
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/sh
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
uniq
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
uniq
\family default
\size default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para encontrar y eliminar líneas duplicadas
 
\emph on
consecutivas
\emph default
 en un archivo de entrada.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

uniq [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

: para contar el número de ocurrencias de cada línea en el archivo de entrada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

: para mostrar sólo las líneas duplicadas.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-u
\family default

\begin_inset Quotes frd
\end_inset

: para mostrar sólo las líneas únicas.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Puesto que el comando solo funciona con lineas duplicadas consecutivas,
 es probable que primero se deba ordenar el archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
strings
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
strings
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para imprimir las cadenas de texto legibles
 que se encuentran en los archivos binarios.
 Esto es útil para buscar información dentro de archivos binarios que no
 son legibles para un usuario común.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

strings [-n MINIMO] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
- n
\family default

\begin_inset Quotes frd
\end_inset

 para especificar el 
\emph on
MÍNIMO
\emph default
 de caracteres buscado.
\end_layout

\begin_layout Example
Para buscar las cadenas de 70 caracteres o mas dentro del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/bin/echo
\family default

\begin_inset Quotes frd
\end_inset

 escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

strings -n 70 /bin/echo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
-E disable interpretation of backslash escapes (default)
\end_layout

\begin_layout Plain Layout

\family typewriter
NOTE: your shell may have its own version of %s, which usually supersedes
\end_layout

\begin_layout Plain Layout

\family typewriter
the version described here.
 Please refer to your shell's documentation
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
wc
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
wc
\family default

\begin_inset Quotes frd
\end_inset

 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
wc
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de "
\emph on
Word Count
\emph default
" (contar palabras).
\end_layout

\end_inset

 se utiliza para contar el número de líneas, palabras y bytes en un archivo
 de texto.
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

wc [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A continuación, se describen las opciones más comunes:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

: cuenta el número de líneas en el archivo especificado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-w
\family default

\begin_inset Quotes frd
\end_inset

: cuenta el número de palabras en el archivo especificado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

: cuenta el número de bytes en el archivo especificado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

: cuenta el número de caracteres en el archivo especificado.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si no se especifican opciones, 
\begin_inset Quotes fld
\end_inset


\family typewriter
wc
\family default

\begin_inset Quotes frd
\end_inset

 cuenta lineas, palabras y caracteres.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
file
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
file
\family default

\begin_inset Quotes frd
\end_inset

 es útil para identificar el formato de un archivo cuando la extensión del
 archivo no es suficiente para determinar su tipo.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

file archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos averiguar que formato tiene una imagen con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

file imagen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
imagen: JPEG image data, JFIF standard 1.01, resolution (DPI), density 300x300,
 segment length 16, progressive, precision 8, 739x688, components 3
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cut
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cut
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta de procesamiento de texto que se utiliza para cortar
 secciones de líneas de texto.
 Permite seleccionar una o varias columnas de texto de un archivo de entrada
 separado por delimitadores como espacios, tabulaciones o comas.
 
\end_layout

\begin_layout Standard
La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cut opciones archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son las siguientes:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c CANTIDAD
\family default

\begin_inset Quotes frd
\end_inset

: Corta una 
\emph on
CANTIDAD
\emph default
 de caracteres.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d DELIMITADOR
\family default

\begin_inset Quotes frd
\end_inset

: Especifica el 
\emph on
DELIMITADOR
\emph default
 de columna utilizado en el archivo de entrada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f CAMPOS
\family default

\begin_inset Quotes frd
\end_inset

: Selecciona 
\emph on
CAMPOS
\emph default
 específicos separados por el delimitador.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Podemos consultar cuales son los shells usados por los usuarios del sistema
 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cut -d : -f 7 /etc/passwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Expresiones regulares
\end_layout

\begin_layout Standard
Las expresiones regulares son un conjunto de caracteres especiales que se
 utilizan para definir 
\emph on
lenguajes
\emph default
.
 Un 
\emph on
lenguaje
\emph default
 es simplemente un conjunto de palabras.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás valga la pena comentar el modulo exrex de python.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los conceptos básicos de las expresiones regulares son:
\end_layout

\begin_layout Description
Caracteres
\begin_inset space ~
\end_inset

literales Los caracteres literales son aquellos que se escriben directamente
 en la expresión regular.
 
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'h'
\family default

\begin_inset Quotes frd
\end_inset

 define el lenguaje 
\begin_inset Formula $\left\{ h\right\} $
\end_inset

, cuya única palabra es la letra 
\begin_inset Formula $h$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
El lenguaje con la palabra vacía (
\begin_inset Formula $\left\{ ''\right\} $
\end_inset

) se define mediante la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
''
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Concatenación La concatenación de lenguajes permite definir un lenguaje
 nuevo, a partir de otros dos.
 Las palabras del nuevo lenguaje se construyen teniendo como prefijos a
 las palabras del primero y como sufijos a las palabras del segundo.
 La concatenación de lenguajes no utiliza ningún carácter especial, simplemente
 se escribe un lenguaje a continuación de otro.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'si'
\family default

\begin_inset Quotes frd
\end_inset

 es la concatenación del lenguaje definido por las expresiones 
\begin_inset Quotes fld
\end_inset


\family typewriter
's'
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
'i'
\family default

\begin_inset Quotes frd
\end_inset

; formando el conjunto 
\begin_inset Formula $\left\{ si\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Union La unión de lenguajes permite definir un lenguaje con palabras de
 otros dos.
 La denotamos con el carácter 
\begin_inset Quotes fld
\end_inset


\family typewriter
|
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a|b|c'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ a,b,c\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Paréntesis Es posible agrupar expresiones regulares mediante la utilización
 de paréntesis.
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'(a|b|c)(1|2|3)'
\family default

\begin_inset Quotes frd
\end_inset

 es la concatenación de los lenguajes definidos por 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a|b|c'
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
'1|2|3'
\family default

\begin_inset Quotes frd
\end_inset

; en definitiva es el lenguaje 
\begin_inset Formula $\left\{ a1,a2,a3,b1,b2,b3,c1,c2,c3\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Repeticiones Es posible concatenar un lenguaje consigo mismo, para dar lugar
 a nuevos lenguajes:
\end_layout

\begin_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
?
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje a lo sumo una sola vez.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a(1)?z'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ az,a1z\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
{n,m}
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje entre 
\begin_inset Formula $n$
\end_inset

 y 
\begin_inset Formula $m$
\end_inset

 veces.
\end_layout

\begin_deeper
\begin_layout Example
Puede definirse el lenguaje 
\begin_inset Formula $\left\{ aaa,aaaa,aaaaa\right\} $
\end_inset

 con la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a{3,5}'
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Example
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Puede omitirse el limite inferior para repetir hasta 
\begin_inset Formula $m$
\end_inset

 veces, o el limite superior para repetirse a partir de 
\begin_inset Formula $n$
\end_inset

 veces.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
+
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje entre una e infinitas veces.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'x+'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ x,xx,xxx,xxxx,\ldots\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
*
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje entre cero e infinitas veces.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'x*'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ '',x,xx,xxx,xxxx,\ldots\right\} $
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Anclas Las anclas son caracteres especiales que indican el inicio o el final
 de una cadena.
\end_layout

\begin_deeper
\begin_layout Itemize
El ancla 
\begin_inset Quotes fld
\end_inset


\family typewriter
^
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para indicar el inicio de una cadena.
\end_layout

\begin_layout Itemize
El ancla 
\begin_inset Quotes fld
\end_inset


\family typewriter
$
\family default

\begin_inset Quotes frd
\end_inset

 indica el final de una cadena.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La utilidad de las anclas quedará en evidencia cuando las utilicemos para
 buscar contenido dentro de archivos.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Ademas, contamos con algunos lenguajes ya definidos, como por ejemplo:
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:digit:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter numérico.
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[::digit::]]
\family default

\begin_inset Quotes frd
\end_inset

 define el lenguaje 
\begin_inset Formula $\left\{ 0,1,2,3,4,5,6,7,8,9\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:alpha:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter alfabético.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:alnum:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter alfanumérico.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:lower:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter en minúscula.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:upper:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter en minúscula.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:space:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter en blanco.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[d-r]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter entre la letra 
\begin_inset Quotes fld
\end_inset


\family typewriter
d
\family default

\begin_inset Quotes frd
\end_inset

 y la 
\begin_inset Quotes fld
\end_inset


\family typewriter
r
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
[a-c]
\family default

\begin_inset Quotes frd
\end_inset

 define el lenguaje 
\begin_inset Formula $\left\{ a,b,c\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
.
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tr
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tr
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
tr
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

traducir
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es una herramienta modificar caracteres en una cadena de texto.
 El comando toma la entrada estándar y la traduce o modifica de acuerdo
 con los parámetros especificados enviando el resultado se envía a la salida
 estándar.
\end_layout

\begin_layout Standard
Se puede utilizar para realizar diversas operaciones de manipulación de
 texto, como eliminar o reemplazar caracteres, cambiar mayúsculas y minúsculas,
 y eliminar espacios en blanco.
 También pueden usarse clases de caracteres.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

tr [opciones] CADENA1 [CADENA2]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones mas comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

: sirve para eliminar los caracteres especificados en el conjunto de caracteres
 a traducir.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

: sustituye secuencias de caracteres repetidos, por uno solo de ellos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La utilidad de 
\begin_inset Quotes fld
\end_inset


\family typewriter
tr
\family default

\begin_inset Quotes frd
\end_inset

 resultara mas evidente cuando se estudien las redirecciones.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
grep
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset

 son las iniciales de 
\begin_inset Quotes fld
\end_inset


\emph on
Global Regular Expresion Print
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para buscar patrones de texto en el contenido de archivos.
 La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

grep [opciones] patron archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-i
\family default

\begin_inset Quotes frd
\end_inset

: busca el patrón de forma insensible a mayúsculas y minúsculas.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

: muestra las líneas que no contienen el patrón.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

: muestra el número de líneas que contienen el patrón.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

: muestra el número de línea de cada línea que contiene el patrón.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

: busca recursivamente en todos los archivos dentro de un directorio y sus
 subdirectorios.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-E
\family default

\begin_inset Quotes frd
\end_inset

: habilita el uso de expresiones regulares extendidas.
 Las expresiones regulares extendidas permites caracteres especiales como
 
\begin_inset Quotes fld
\end_inset


\family typewriter
?
\family default

\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset


\family typewriter
+
\family default

\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset


\family typewriter
{}
\family default

\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset


\family typewriter
|
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
()
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-o
\family default

\begin_inset Quotes frd
\end_inset

: muestra sólo la parte de la línea que coincide con el patrón de búsqueda.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto, 
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset

 muestra toda la línea que contiene la coincidencia.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Para buscar la linea donde se encuentra definido el usuario 
\begin_inset Quotes fld
\end_inset


\family typewriter
root
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

grep root /etc/passwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
root:x:0:0::/root:/bin/bash
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para buscar cuantas veces aparece la palabra 
\begin_inset Quotes fld
\end_inset


\emph on
GNU
\emph default

\begin_inset Quotes frd
\end_inset

 en la documentación de Bash usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

grep -c GNU /usr/share/doc/bash/*
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/bash.html:9
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/bashref.html:49
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/CHANGES:18
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/COMPAT:0
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/FAQ:10
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/INTRO:1
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/NEWS:10
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/POSIX:0
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/RBASH:0
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/README:2
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

 para crear un archivo de texto.
 Luego visualice dicho contenido en el emulador de terminal con el comando
 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
En una consola virtual, utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset

 para ver el contenido de 
\begin_inset Quotes fld
\end_inset


\family typewriter
/usr/share/doc/bash/README
\family default

\begin_inset Quotes frd
\end_inset

.
 Tome nota de las dificultades que se presentan al ver el archivo y proponga
 una forma de solucionarlo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar como mostrar con 
\begin_inset Quotes fld
\end_inset


\family typewriter
head
\family default

\begin_inset Quotes frd
\end_inset

 todas las lineas de un archivo, salvo las últimas 3.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo vacío y, en un emulador de terminal, utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
tail
\family default

\begin_inset Quotes frd
\end_inset

 para monitorear su contenido.
 Modifique el contenido del archivo en otra aplicación y observe como esos
 cambios se reflejan en el emulador de terminal.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Descargue la siguiente 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Fitz_Roy_1.jpg/800px-Fitz_Roy_1.jpg"
literal "true"

\end_inset

 fotografía y utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
strings
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar con que cámara se tomo dicha imagen.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo de python con el siguiente código:
\end_layout

\begin_layout Exercise
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hola mundo!
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
file
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar que tipo de archivo es.
\end_layout

\begin_layout Exercise
Agregue la siguiente linea al comienzo del archivo:
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

#!/bin/python
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vuelva a averiguar el tipo del archivo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo con el siguiente contenido:
\end_layout

\begin_layout Exercise
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=TeX"
inline false
status open

\begin_layout Plain Layout

Año,Marca,Modelo,Descripción,Precio
\end_layout

\begin_layout Plain Layout

1997,Ford,E350,"ac, ABS, moon",3000.00
\end_layout

\begin_layout Plain Layout

1999,Chevy,Venture,Extended Edition,4900.00
\end_layout

\begin_layout Plain Layout

1999,Chevyr,Venture,"Extended Edition, Very Large",5000.00
\end_layout

\begin_layout Plain Layout

1996,Jeep,Grand Cherokee,"MUST SELL! air, moon roof",4799.00
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cut
\family default

\begin_inset Quotes frd
\end_inset

 para obtener todas las marcas.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar el propósito y funcionamiento de los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
comm
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
diff
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe cada uno de ellos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba expresiones regulares que definan los siguientes lenguajes:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left\{ xx,yx\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras con una cantidad par de letras 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras con una cantidad impar de letras 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras formadas solamente por letras 
\begin_inset Formula $x$
\end_inset

, o solamente por letras 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras que comienzan por letras 
\begin_inset Formula $x$
\end_inset

 y siguen por letras 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras donde cada letra 
\begin_inset Formula $y$
\end_inset

 se encuentra entre un par de letras 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras que terminen en 
\begin_inset Formula $.jpg$
\end_inset

 o 
\begin_inset Formula $.jpeg$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para consultar que hacen las opciones 
\begin_inset Quotes fld
\end_inset


\family typewriter
-A
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
-B
\family default

\begin_inset Quotes frd
\end_inset

 del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Exercise
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Secuenciación, redirección y tuberías
\end_layout

\begin_layout Subsection
Secuenciación
\end_layout

\begin_layout Standard
La secuenciación de comandos en Bash se utiliza para ejecutar varios comandos
 de forma consecutiva en una sola línea.
 Se pueden utilizar diferentes operadores de secuenciación para controlar
 cómo se ejecutan los comandos en función de sus resultados.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los operadores de secuenciación, son otras de las cuestiones de las cuales
 se encarga el shell.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
;
\family default

\begin_inset Quotes frd
\end_inset

: Se utiliza para ejecutar varios comandos en secuencia, independientemente
 del resultado de cada uno de ellos.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
&&
\family default

\begin_inset Quotes frd
\end_inset

: Se utiliza para ejecutar el siguiente comando solo si el comando anterior
 tuvo éxito.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
||
\family default

\begin_inset Quotes frd
\end_inset

: Se utiliza para ejecutar el siguiente comando solo si el comando anterior
 falló.
\end_layout

\begin_layout Example
Para crear dos archivos y verificar que se hayan creado, podemos usar el
 siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch archivo1 archivo2; ls archivo1 archivo2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Podemos intentar borrar un directorio y mostrar un mensaje en caso de éxito
 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rmdir directorio && echo 
\begin_inset Quotes fld
\end_inset

El directorio se ha borrado.
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Análogamente, podemos mostrar el mensaje si el directorio no se creo:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rmdir directorio || echo 
\begin_inset Quotes fld
\end_inset

El directorio no se ha borrado.
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Redirección
\end_layout

\begin_layout Standard
Las redirecciones en Bash son una forma de cambiar la entrada y/o salida
 de un comando a diferentes archivos o dispositivos.
\end_layout

\begin_layout Standard
Hay varios tipos de redirecciones en Bash:
\end_layout

\begin_layout Itemize
Redirección de salida estándar 
\begin_inset Quotes fld
\end_inset


\family typewriter
>
\family default

\begin_inset Quotes frd
\end_inset

: esta redirección cambia la salida en pantalla del comando a un archivo.
 La sintaxis básica de la redirección de salida estándar es:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando > archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La redirección de salida estándar substituye por completo el contenido de
 un archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Si queremos que la salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 se guarde en el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
lista.txt
\family default

\begin_inset Quotes frd
\end_inset

, podemos usar la redirección de salida de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls > lista.txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

ls > lista.txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Anexación de salida estándar 
\begin_inset Quotes fld
\end_inset


\family typewriter
>>
\family default

\begin_inset Quotes frd
\end_inset

: La redirección 
\begin_inset Quotes fld
\end_inset


\family typewriter
>>
\family default

\begin_inset Quotes frd
\end_inset

 en Bash se utiliza para redirigir la salida estándar de un comando a un
 archivo y agregarla al final del archivo en lugar de reemplazar su contenido,
 como hace la redirección "
\family typewriter
>
\family default
".
 La sintaxis básica de la anexación de salida estándar es:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando >> archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Si queremos crear un archivo con los textos 
\begin_inset Quotes fld
\end_inset


\emph on
Hola mundo!
\emph default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\emph on
Chau mundo!
\emph default

\begin_inset Quotes frd
\end_inset

 en dos lineas, podes usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 
\begin_inset Quotes fld
\end_inset

Hola mundo!
\begin_inset Quotes frd
\end_inset

 > saludo
\end_layout

\begin_layout Plain Layout

echo 
\begin_inset Quotes fld
\end_inset

Chau mundo!
\begin_inset Quotes frd
\end_inset

 >> saludo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

echo 
\begin_inset Quotes fld
\end_inset

Hola mundo!
\begin_inset Quotes frd
\end_inset

 > saludo
\end_layout

\begin_layout Plain Layout

echo 
\begin_inset Quotes fld
\end_inset

Chau mundo!
\begin_inset Quotes frd
\end_inset

 >> saludo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Redirección de salida de error 
\begin_inset Quotes fld
\end_inset


\family typewriter
2>
\family default

\begin_inset Quotes frd
\end_inset

: Esta redirección cambia la salida de error de un comando a un archivo.
 La sintaxis básica de la redirección de salida estándar es:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando 2> archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La salida de error en sistemas Linux es una salida de información que se
 genera cuando un comando o programa encuentra un error durante su ejecución.
 Esta salida suele estar separada de la salida estándar; aunque se suele
 mostrar en la misma pantalla.
 
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para escribir los mensajes de error de 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 en un archivo usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir .
 2> error
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir .
 2> error
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Redirección de salidas 
\begin_inset Quotes fld
\end_inset


\family typewriter
&>
\family default

\begin_inset Quotes frd
\end_inset

: La redirección 
\begin_inset Quotes fld
\end_inset


\family typewriter
&>
\family default

\begin_inset Quotes frd
\end_inset

 en Bash es una forma de redireccionar tanto la salida estándar como la
 salida de error estándar de un comando a un archivo o dispositivo.
 La sintaxis básica es la siguiente:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando &> archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para redirigir ambas salidas del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 en un archivo usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir -v carpeta carpeta &> salidas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
En Linux y sistemas similares, la carpeta 
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev
\family default

\begin_inset Quotes frd
\end_inset

 contiene algunos archivos especiales que son útiles a la hora de combinarlos
 con redirecciones.
 Algunos de ellos son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset

/
\family typewriter
dev/null
\family default

\begin_inset Quotes frd
\end_inset

: un archivo que no almacena ningún dato, sino que simplemente los descarta.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/tty*
\family default

\begin_inset Quotes frd
\end_inset

: son archivos que representan a las consolas virtuales.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/pts/*
\family default

\begin_inset Quotes frd
\end_inset

: son archivos que representan a los emuladores de terminales.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/zero
\family default

\begin_inset Quotes frd
\end_inset

: un archivo infinito que contiene datos cero (
\begin_inset Formula $0$
\end_inset

).
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/random
\family default

\begin_inset Quotes frd
\end_inset

: un archivo que genera datos aleatorios.
\end_layout

\begin_layout Subsection
Tuberías
\end_layout

\begin_layout Standard
En Bash, una tubería (también conocida como 
\begin_inset Quotes fld
\end_inset


\emph on
pipe
\emph default

\begin_inset Quotes frd
\end_inset

 en inglés) permite conectar la 
\emph on
salida
\emph default
 de un comando con la 
\emph on
entrada
\emph default
 de otro, lo que permite crear una cadena de procesos que trabajan juntos
 para realizar una tarea más compleja.
 La sintaxis de una tubería es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando | comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar ejemplos.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar sobre los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
true
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
false
\family default

\begin_inset Quotes frd
\end_inset

.
 Utilice secuenciación para mostrar un mensaje en pantalla luego de la ejecución
 de cada uno de ellos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Piense que ocurre tras ejecutar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
echo 2 * 3 > 10
\family default

\begin_inset Quotes frd
\end_inset

.
 Verifíquelo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Busque en Internet o consulte a alguna IA sobre la redirección de entrada
 
\begin_inset Quotes fld
\end_inset


\family typewriter
<
\family default

\begin_inset Quotes frd
\end_inset

.
 Explique que hace el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat < archivo1 > archivo2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
¿Cómo puede utilizarse la redirección de salida estándar para crear archivos
 vacíos, sin usar 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
¿Cuanto ocupa un archivo con todas las 
\begin_inset Quotes fld
\end_inset

contraseñas
\begin_inset Quotes frd
\end_inset

 posibles de cuatro letras formadas por caracteres alfabéticos en minúscula?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo con una lista de todos los archivos del sistema.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para observar la tercer linea de un archivo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para averiguar cual es el archivo con
 mayor cantidad de lineas.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para averiguar cuantos emuladores de terminal
 hay abiertos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para mostrar los tamaños de los archivos
 del directorio actual.
\end_layout

\begin_layout Section
Usuarios y grupos
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
whoami
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
whoami
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
whoami
\family default

\begin_inset Quotes frd
\end_inset

 significa 
\begin_inset Quotes fld
\end_inset


\emph on
Who Am I
\emph default

\begin_inset Quotes frd
\end_inset

 (quién soy yo).
\end_layout

\end_inset

 muestra el nombre de usuario de la cuenta actualmente activa en la sesión
 de terminal.
 Es útil cuando se necesita saber el nombre de usuario para realizar una
 acción o para verificar que la cuenta activa es la deseada.
\end_layout

\begin_layout Example
Para saber cuál es el usuario activo, simplemente escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

whoami
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
alumno
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

whoami
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
id
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
id
\family default

\begin_inset Quotes frd
\end_inset

 obtiene información sobre la identidad de un usuario, como su nombre de
 usuario, identificador de usuario (
\emph on
UID
\emph default
), identificador de grupo (
\emph on
GID
\emph default
) y los grupos a los que pertenece.
 La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

id [usuario]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica el usuario, se considera el usuario que lo ejecuta.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Dicha información se obtiene del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/passwd
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para conocer información del usuario 
\emph on
root
\emph default
 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

id root
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
uid=0(root) gid=0(root) grupos=0(root)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
who
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
who
\family default

\begin_inset Quotes frd
\end_inset

 muestra información acerca de los usuarios que están actualmente conectados
 al sistema.
 Esta información incluye el nombre de usuario, la consola virtual en la
 que están conectados, la fecha y hora en que iniciaron sesión y la dirección
 IP de la máquina desde la que se conectaron.
\end_layout

\begin_layout Example
Para saber cuáles usuarios están conectados podemos escribir:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

who
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
damian tty1 2023-05-01 04:21
\end_layout

\begin_layout Plain Layout

\family typewriter
root
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tty2 2023-05-03 06:01 (190.2.103.252)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
su
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
su
\family default

\begin_inset Quotes frd
\end_inset

 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
su
\family default

\begin_inset Quotes frd
\end_inset

 es un acrónimo de 
\begin_inset Quotes fld
\end_inset


\emph on
substituir usuario
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es utilizado para cambiar de usuario en una sesión de terminal.
 La básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

su [USUARIO]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un 
\emph on
USUARIO
\emph default
, se cambia al usuario 
\emph on
root
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al ingresar el comando 
\begin_inset Quotes fld
\end_inset

su
\begin_inset Quotes frd
\end_inset

, el sistema solicitará la contraseña 
\emph on
del usuario al que se quiere cambiar
\emph default
.
 Si la contraseña es correcta se iniciará una shell para el usuario indicado.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para empezar a utilizar la terminal como el usuario root escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

su
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
sudo
\end_layout

\begin_layout Standard
Con 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

, un usuario común puede obtener temporariamente los permisos de un usuario
 con otros privilegios, como el superusuario (
\emph on
root
\emph default
), para realizar tareas que requieren permisos especiales.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

sudo [-u USUARIO] comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un 
\emph on
USUARIO
\emph default
, se obtienen los privilegios del usuario 
\emph on
root
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al ingresar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

, el sistema solicitará la contraseña 
\emph on
del usuario que ejecuta el comando
\emph default
.
 Si la contraseña es correcta y el usuario tiene permisos para usar 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

, el comando especificado se ejecutará con los permisos correspondientes.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver el archivo de contraseñas de Linux podemos usar el siguiente comando:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo head -n 5 /etc/shadow
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
root:x:0:0::/root:/bin/bash
\end_layout

\begin_layout Plain Layout

\family typewriter
bin:x:1:1::/:/usr/bin/nologin
\end_layout

\begin_layout Plain Layout

\family typewriter
daemon:x:2:2::/:/usr/bin/nologin
\end_layout

\begin_layout Plain Layout

\family typewriter
mail:x:8:12::/var/spool/mail:/usr/bin/nologin
\end_layout

\begin_layout Plain Layout

\family typewriter
ftp:x:14:11::/srv/ftp:/usr/bin/nologin
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Para usar la consola como superusuario, pero sin saber la contraseña de
 
\emph on
root
\emph default
 podemos usar:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo su
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
passwd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
passwd
\family default

\begin_inset Quotes frd
\end_inset

 es utilizado para cambiar la contraseña de un usuario.
 La básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

passwd [opciones] [usuario]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se ejecuta sin argumentos, se cambiará la contraseña del usuario actual.
 El comando pedirá al usuario que introduzca la contraseña 
\emph on
actual
\emph default
 y, a continuación, que introduzca la nueva contraseña dos veces para confirmarl
a.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las contraseñas de los usuarios en Linux están cifradas y almacenadas en
 un archivo protegido llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/shadow
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

: Bloquea la cuenta del usuario.
 Esto significa que el usuario no podrá iniciar sesión hasta que la cuenta
 sea desbloqueada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-u
\family default

\begin_inset Quotes frd
\end_inset

: Desbloquea una cuenta que ha sido bloqueada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

: Elimina la contraseña del usuario.
 Esto permite que el usuario inicie sesión sin una contraseña.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-e
\family default

\begin_inset Quotes frd
\end_inset

: Hace que la contraseña del usuario expire.
 Esto significa que el usuario deberá cambiar su contraseña la próxima vez
 que inicie sesión.
\end_layout

\begin_layout Subsection
Permisos en Linux
\end_layout

\begin_layout Standard
Los permisos Linux son utilizados para proteger los archivos y directorios
 del sistema de accesos no autorizado.
 Cada archivo y directorio es propiedad de un usuario y un grupo; y el propietar
io del archivo o directorio puede especificar quién tiene acceso a ellos
 y en qué nivel.
\end_layout

\begin_layout Standard
Existen tres tipos de permisos: de usuario (
\emph on
u
\emph default
), de grupo (
\emph on
g
\emph default
) y otros (
\emph on
o
\emph default
), y cada uno de ellos puede tener tres permisos posibles: lectura (
\emph on
r
\emph default
), escritura (
\emph on
w
\emph default
) y ejecución (
\emph on
x
\emph default
).
\end_layout

\begin_layout Itemize
El permiso de lectura (
\emph on
r
\emph default
) permite al usuario ver el contenido de un archivo o listar los archivos
 de un directorio.
\end_layout

\begin_layout Itemize
El permiso de escritura (
\emph on
w
\emph default
) permite al usuario modificar el contenido de un archivo o crear, eliminar
 y renombrar archivos dentro de un directorio.
\end_layout

\begin_layout Itemize
El permiso de ejecución (
\emph on
x
\emph default
) permite al usuario ejecutar un archivo o entrar en un directorio.
\end_layout

\begin_layout Example
Observemos la salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls -l ~
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
-rwxr-xr-x 1 alumno wheel 15832 abr 12 19:33 dsh*
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 alumno wheel
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1130 abr 12 19:32 dsh.c
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Podemos observar que el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
dsh
\family default

\begin_inset Quotes frd
\end_inset

 tiene los permisos 
\begin_inset Quotes fld
\end_inset


\family typewriter
rwxr-xr-x
\family default

\begin_inset Quotes frd
\end_inset

.
 Los primeros tres permisos se corresponden con los permisos de usuario
 (
\emph on
u
\emph default
), los siguientes con los permisos del grupo (
\emph on
g
\emph default
) y los últimos son los permisos de los otros (
\emph on
o
\emph default
) usuarios.
 En definitiva el usuario 
\begin_inset Quotes fld
\end_inset


\emph on
alumno
\emph default

\begin_inset Quotes frd
\end_inset

 tiene todos los permisos, pero los del grupo 
\begin_inset Quotes fld
\end_inset


\emph on
wheel
\emph default

\begin_inset Quotes frd
\end_inset

 y demás usuarios no tienen permiso de escritura.
\end_layout

\begin_layout Itemize
Para el caso del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
dsh.c
\family default

\begin_inset Quotes frd
\end_inset

, la única diferencia es que nadie puede ejecutarlo.
\end_layout

\end_deeper
\begin_layout Example
En ocasiones estos permisos se representan mediante un número de 3 dígitos
 en base 8, donde cada dígito representa los permisos para un grupo diferente
 de usuarios: el propietario del archivo, el grupo al que pertenece el archivo
 y otros usuarios.
 Cada dígito es una suma de valores numéricos que representan los permisos
 para leer, escribir y ejecutar.
\end_layout

\begin_layout Example
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Los valores numéricos correspondientes a cada permiso son:
\end_layout

\begin_layout Itemize
\begin_inset Formula $4$
\end_inset

 para el permiso de lectura (
\emph on
r
\emph default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $2$
\end_inset

 para el permiso de escritura (
\emph on
w
\emph default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1$
\end_inset

 para el permiso de ejecución (
\emph on
x
\emph default
).
\end_layout

\begin_layout Standard
Por lo tanto, la suma de los valores numéricos para los distintos permisos
 es:
\end_layout

\begin_layout Itemize
\begin_inset Formula $0$
\end_inset

: sin permisos (
\family typewriter
---
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1$
\end_inset

: permiso de ejecución (
\family typewriter
--x
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $2$
\end_inset

: permiso de escritura (
\family typewriter
-w-
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1+2=3$
\end_inset

: permiso de escritura y ejecución (
\family typewriter
-wx
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $4$
\end_inset

: permiso de lectura (
\family typewriter
r--
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1+4=5$
\end_inset

: permiso de lectura y ejecución (
\family typewriter
r-x
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $2+4=6$
\end_inset

: permiso de lectura y escritura (
\family typewriter
rw-
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1+2+4=7$
\end_inset

: permiso de lectura, escritura y ejecución (
\family typewriter
rwx
\family default
).
\end_layout

\begin_layout Example
Si vemos que un archivo tiene permisos 
\begin_inset Formula $644$
\end_inset

, esto significa que el propietario del archivo tiene permisos de lectura
 y escritura (
\begin_inset Formula $6$
\end_inset

), mientras que el grupo y otros usuarios solo tienen permiso de lectura
 (
\begin_inset Formula $4$
\end_inset

).
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
chown
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
chown
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
chown
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset


\emph on
Change Owner
\emph default

\begin_inset Quotes frd
\end_inset

 (cambiar dueño).
\end_layout

\end_inset

 se utiliza para cambiar el propietario y/o grupo de un archivo o directorio.
 La sintaxis general del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

chown [-R] usuario[:grupo] archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-R
\family default

\begin_inset Quotes frd
\end_inset

 para operar recursivamente sobre los directorios.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante tener en cuenta que generalmente solo el usuario 
\emph on
root
\emph default
 puede cambiar la propiedad de un archivo o directorio.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
El usuario 
\emph on
root
\emph default
 puede apropiarse de un 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chown root archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
chmod
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
chmod
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
chmod
\family default

\begin_inset Quotes frd
\end_inset

 significa 
\begin_inset Quotes fld
\end_inset

cambiar modo
\begin_inset Quotes frd
\end_inset

 (del inglés: 
\begin_inset Quotes fld
\end_inset


\emph on
Change Mode
\emph default

\begin_inset Quotes frd
\end_inset

).
\end_layout

\end_inset

 se utiliza para cambiar los permisos de acceso a archivos y directorios.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
chmod
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

chmod [-R] modo archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-R
\family default

\begin_inset Quotes frd
\end_inset

 para operar recursivamente sobre los directorios.
\end_layout

\begin_layout Standard
El modo puede especificarse en forma numérica o usando caracteres especiales.
 La sintaxis básica del modo simbólico es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

[ugoa][+-=][rwx]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Donde:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
u
\family default

\begin_inset Quotes frd
\end_inset

: representa al usuario propietario del archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
g
\family default

\begin_inset Quotes frd
\end_inset

: representa al grupo al que pertenece el archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
o
\family default

\begin_inset Quotes frd
\end_inset

: representa a otros usuarios que no son el propietario ni pertenecen al
 grupo.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
a
\family default

\begin_inset Quotes frd
\end_inset

: representa a todos los usuarios.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
+
\family default

\begin_inset Quotes frd
\end_inset

: agrega los permisos especificados al archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-
\family default

\begin_inset Quotes frd
\end_inset

: elimina los permisos especificados del archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
=
\family default

\begin_inset Quotes frd
\end_inset

: establece los permisos especificados y elimina cualquier otro permiso
 que no sea el especificado.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para agregar permiso de 
\emph on
lectura
\emph default
 al usuario propietario de 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod u+r archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para eliminar permiso de 
\emph on
escritura
\emph default
 al grupo al que pertenece 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod g-w archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para establecer permiso de 
\emph on
ejecución
\emph default
 a otros usuarios que no son propietarios de 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 ni pertenecen al grupo, podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod o=x archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para darles todos los permisos a todos los usuarios sobre 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 podemos escribir:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod =777 archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
useradd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
useradd
\family default

\begin_inset Quotes frd
\end_inset

 es utilizado para crear una nueva cuenta de usuario en el sistema.
 A continuación se explican en detalle los aspectos más importantes del
 comando.
\end_layout

\begin_layout Standard
Sintaxis básica:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

useradd [opciones] usuario
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

: Crea automáticamente el directorio personal del usuario en 
\begin_inset Quotes fld
\end_inset


\family typewriter
/home/usuario
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-g GRUPO
\family default

\begin_inset Quotes frd
\end_inset

: Setea el 
\emph on
GRUPO
\emph default
 al que pertenece el usuario.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante destacar que para crear una cuenta de usuario con 
\begin_inset Quotes fld
\end_inset


\family typewriter
useradd
\family default

\begin_inset Quotes frd
\end_inset

, es necesario tener privilegios de superusuario en el sistema.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
userdel
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
userdel
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para eliminar una cuenta de usuario existente.
 La sintaxis básica del comando "userdel" es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

userdel [opciones] usuario
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

: esta opción se utiliza para eliminar la cuenta de usuario y sus archivos
 personales.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

: esta opción se utiliza para forzar la eliminación de la cuenta de usuario,
 incluso si está actualmente en uso o si tiene procesos en ejecución.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al igual que 
\begin_inset Quotes fld
\end_inset


\family typewriter
useradd
\family default

\begin_inset Quotes frd
\end_inset

, para usar 
\begin_inset Quotes fld
\end_inset


\family typewriter
userdel
\family default

\begin_inset Quotes frd
\end_inset

 es necesario tener privilegios de superusuario en el sistema.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar usrmod
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Section
Procesos y tareas
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ps
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
jobs
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
bg
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
fg
\end_layout

\begin_layout Subsection
Señales
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
kill
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Section
Gestión
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
apt
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
chsh
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
free
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
loadkeys
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
lsof
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
reboot
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
setxkbmap
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
startx
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
top
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
uname
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
uptime
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
which
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Section
Internet
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
curl
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ping
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
scp
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ssh
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
wget
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Section
Otros comandos
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
alias
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
bc
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
dd
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
rsync
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
sha256sum
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tar
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
time
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tldr
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
watch
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Chapter
Shell scripting
\end_layout

\begin_layout Section
Comandos
\end_layout

\begin_layout Subsection

\family typewriter
exit
\end_layout

\begin_layout Subsection

\family typewriter
export
\end_layout

\begin_layout Subsection

\family typewriter
read
\end_layout

\begin_layout Subsection

\family typewriter
seq
\end_layout

\begin_layout Subsection

\family typewriter
shift
\end_layout

\begin_layout Subsection

\family typewriter
source
\end_layout

\begin_layout Subsection

\family typewriter
test
\end_layout

\begin_layout Subsection

\family typewriter
trap
\end_layout

\begin_layout Section
Control de flujo
\end_layout

\begin_layout Subsection
if / else
\end_layout

\begin_layout Subsection
for
\end_layout

\begin_layout Subsection
while / until
\end_layout

\begin_layout Subsection
case
\end_layout

\begin_layout Subsection
select
\end_layout

\begin_layout Subsection
Funciones
\end_layout

\begin_layout Part
Conceptos adicionales
\end_layout

\begin_layout Chapter
Control de versiones
\end_layout

\begin_layout Chapter
Contenedores
\end_layout

\begin_layout Section
Emulación
\end_layout

\begin_layout Section
Virtualización
\end_layout

\begin_layout Section
Contenedores
\end_layout

\end_body
\end_document
